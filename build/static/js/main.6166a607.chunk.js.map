{"version":3,"sources":["date.js","requestAndStore.js","pages/toDo/Loader.js","App.js","pages/toDo/ComingSoon.js","pages/toDo/Home.js","pages/toDo/Contact.js","pages/Nav.js","pages/toDo/Custom.js","useFetch.js","pages/views/TypeView.js","pages/views/CalendarView.js","pages/Router.js","pages/views/DetailView.js","index.js"],"names":["updateDate","currentDate","shift","Math","abs","getDate","setMonth","getMonth","setDate","daysInAMonth","month","includes","toString","timeZone","string","timeBetween","date1","date2","ms","getTime","minutes","hours","days","weeks","floor","years","weekNumber","date","yearStarts","Date","getFullYear","secondWeekStartsOn","getDay","secondWeekStarts","oneWeek","shifts","day","shiftLeft","shiftRight","alert","adjustDate","weekStartsOn","weekEndsOn","edgeDaysOfEachMonth","endOfCurrentMonth","adjustMonthDate","startOfOneMonthAgo","startOfTwoMonthsAgo","startOfThreeMonthsAgo","startOfSixMonthsAgo","startOfNineMonthsAgo","startOfTwelveMonthsAgo","aYearAgo","shiftMonth","starterURL","calendarList","eventList","gapi","window","listOfCalendars","dayBehind","dayAhead","a","client","calendar","list","response","calendars","result","items","i","length","push","summary","events","id","toISOString","console","log","message","timeId","calName","calId","minDate","maxDate","myDate","event","filterAndPost","undefined","start","eventStartsAt","dateTime","eventEndsAt","end","eventDuration","roundTo2Decimals","dayEndsAt","setHours","nextDayStartsAt","weekNum1","weekNum2","monthNum1","monthNum2","eventDuration1","eventDuration2","sendPost","toDateString","description","weekNum","monthNum","eventName","startTime","endTime","duration","axios","method","url","data","number","round","Loader","class","initClient","init","apiKey","clientId","discoveryDocs","scope","then","auth2","getAuthInstance","isSignedIn","listen","updateSigninStatus","get","error","JSON","stringify","signedIn","handleAuthClick","location","replace","signIn","d","document","createElement","className","getElementById","replaceWith","myRequestAndStore","handleSignoutClick","sendDelete","signOut","onload","load","LeftSection","props","style","color","width","onClick","RightSection","href","Homepage","App","ComingSoon","minHeight","CountDown","Home","Contact","NavBarSymbols","to","role","LeftNavBarChocies","today","currentWeekNum","currentMonthNum","RightNavBarChocies","disabled","onSignout","addEventListener","$navbarBurgers","Array","prototype","slice","call","querySelectorAll","forEach","el","target","dataset","$target","classList","toggle","Nav","Custom","useFetch","useState","setData","useEffect","fetch","res","json","productivity","counter","productive","neutral","destructive","others","productivityList","neturalList","destructiveList","TableView","columnsData","type","Header","accessor","dataC","TableData","columnsT","dataT","columns","React","useMemo","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","border","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","borderBottom","background","fontWeight","render","row","getRowProps","cells","cell","getCellProps","padding","percentage","decimal","Productivity","measureProductivity","totalRecorded","show","TextData","records","record","toLowerCase","totalHours","DailyCalendarView","dateRange","info","height","toLocaleDateString","weekday","year","DailyDateRangeView","value","DailyShowCalendar","defaultValue","onChange","colorPrimary","calendarClassName","calendarTodayClassName","shouldHighlightWeekends","WeeklyCalendarView","currentWeek","WeeklyDateRangeView","options","WeeklyShowCalendar","from","colorPrimaryLight","WeekDaysView","Day","requested","calNames","editedData","textAlign","MonthlyCalendarView","monthNumber","currentMonth","MonthlyDateRangeView","MonthlyShowCalendar","defaultFrom","nextDate","firstTime","visibility","Router","FillDb","dataLinkAdded","weekRange","dateInMonth","params","useParams","navigate","useNavigate","period","specific","detail","addLink","adjustPeriod","e","dayUpdated","parseInt","calData","isActive","CalName","Index","path","element","myApp","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.6166a607.chunk.js","sourcesContent":["/**\r\n * @param {date, number}\r\n * @return {date} the new date shifted by the number \r\n * example: updateDate(today, 1) gives you the next day\r\n */\r\n  function updateDate(currentDate, shift) {\r\n    if(shift < 0 && Math.abs(shift) > currentDate.getDate()) {\r\n        currentDate.setMonth(currentDate.getMonth() - 1) \r\n        currentDate.setDate(currentDate.getDate() +  shift + daysInAMonth(currentDate.getMonth()));\r\n        return currentDate;\r\n    }\r\n    currentDate.setDate(currentDate.getDate() +  shift);\r\n    return currentDate; //updated date\r\n  }\r\n  \r\n  \r\n  /**\r\n   * number days in a month\r\n   * @param {number} month \r\n   * @returns {number} days in a month\r\n   */\r\n   function daysInAMonth (month) {\r\n    let longMonths = ('0, 2, 4, 6, 7, 9, 11')\r\n    if(longMonths.includes(month.toString())) {\r\n        return 31;\r\n    } else if(month === 2) {\r\n        return 28;\r\n    } else {\r\n        return 30;\r\n    }\r\n  }\r\n  \r\n   function timeZone(string) {\r\n    if(string.includes('Pacific')) {\r\n        return 'America/Los_Angeles'\r\n    } else if (string.includes('Eastern')) {\r\n        return 'America/New_York'\r\n    } else if (string.includes('Central')) {\r\n        return 'America/Chicago'\r\n    } else if (string.includes('Mountain')) {\r\n        return 'America/Denver'\r\n    } else if (string.includes('Alaska')) {\r\n        return ('America/Anchorage')\r\n    } else if (string.includes('Hawaii')) {\r\n        return ('Pacific/Honolulu');\r\n    } else {\r\n        return ('Etc/GMT')\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * givent two dates, it gives the difference in ms, minutes, hours, days, and years.\r\n   * \r\n   * @param date1 first day\r\n   * @param date2  second day\r\n   * \r\n   * @return Object date2 -date1 in {ms: ms, minutes: minutes, hours: hours, days: days, years: years}\r\n   */\r\n  function timeBetween (date1, date2) {\r\n    let ms = date2.getTime() - date1.getTime();\r\n    let minutes = ms/(1000*60);\r\n    let hours = minutes/60;\r\n    let days = hours/24;\r\n    let weeks = Math.floor(days/7);\r\n    let years = days/365;\r\n    return {ms: ms, minutes: minutes, hours: hours, days: days, weeks:weeks, years: years};\r\n  }\r\n  \r\n  /**\r\n   * given a date retunrs the week number starting from 0\r\n   * @param {Date Object} date \r\n   * @returns {integer} week number\r\n   */\r\n   function weekNumber (date) {\r\n    let yearStarts = new Date(date.getFullYear(), 0, 1, 0, 0)\r\n    let secondWeekStartsOn = secondWeekStarts(yearStarts)\r\n    yearStarts.setDate(secondWeekStartsOn)\r\n    let weekNum = timeBetween(yearStarts, date).weeks\r\n    return weekNum + 1 //week starts from 0, 1, 2...\r\n  }\r\n  \r\n  function secondWeekStarts(date) {\r\n    return 8 - date.getDay()\r\n  }\r\n\r\n  /**\r\n * @param {Date} date\r\n * @param {number} days\r\n * @return {number} day updated incase it's below 0 or above number of dates in that month\r\n */\r\nfunction validityCheck (date, day) {\r\n    if(day < 0) {\r\n        return day + daysInAMonth(date.getMonth() - 1)\r\n\r\n    } else if (day > 23) {\r\n        if(day > daysInAMonth(date.getMonth())) {\r\n            return day - daysInAMonth(date.getMonth());\r\n        } else {\r\n            return day;\r\n        }\r\n    } else {\r\n        return day;\r\n        \r\n    }\r\n}\r\n\r\n/** after this is getting weekly range */\r\nfunction adjustDate(date) {\r\n    let day = new Date(date).getDay();\r\n    let shiftLeft = 0\r\n    let shiftRight = 0\r\n    if (day == 0){\r\n        shiftRight = 6\r\n    } else if (day == 1) {\r\n        shiftLeft = -1\r\n        shiftRight = 5\r\n    } else if (day == 2) {\r\n        shiftLeft = -2\r\n        shiftRight = 4\r\n    } else if (day == 3) {\r\n        shiftLeft = -3\r\n        shiftRight = 3\r\n    } else if (day == 4) {\r\n        shiftLeft = -4\r\n        shiftRight = 2\r\n    } else if (day == 5) {\r\n        shiftLeft = -5\r\n        shiftRight = 1\r\n    } else if (day == 6) {\r\n        shiftLeft = -6\r\n    } else {\r\n        alert('no shift made')\r\n    }\r\n\r\n    return{shiftLeft: shiftLeft, shiftRight: shiftRight}\r\n}\r\n\r\n function oneWeek(date) {\r\n    let shifts = adjustDate(date)\r\n    let weekStartsOn = new Date(date)\r\n    let weekEndsOn = new Date(date)\r\n    weekStartsOn = updateDate(weekStartsOn, shifts.shiftLeft)\r\n    weekEndsOn = updateDate(weekEndsOn, shifts.shiftRight)\r\n    return {weekStartsOn: weekStartsOn, weekEndsOn: weekEndsOn}\r\n}\r\n\r\nlet input = 'Mon Nov 29 2021'\r\nlet date = new Date(input)\r\nlet givenWeek = oneWeek(date)\r\n\r\n/**\r\n * gives first and last day of months starting on the current month\r\n * @params {}\r\n */\r\nfunction edgeDaysOfEachMonth () {\r\n  //end of this month  ex: Nov 30\r\n  let endOfCurrentMonth = adjustMonthDate(1, 0)\r\n  //Aug Sep Oct Nov\r\n  //three months ago Sept 1\r\n  let startOfOneMonthAgo = adjustMonthDate(0, 1)\r\n  let startOfTwoMonthsAgo = adjustMonthDate(-1, 1);\r\n  let startOfThreeMonthsAgo = adjustMonthDate(-2, 1);\r\n  let startOfSixMonthsAgo = adjustMonthDate(-5, 1)\r\n  let startOfNineMonthsAgo = adjustMonthDate(-8, 1)\r\n  let startOfTwelveMonthsAgo = adjustMonthDate(-11, 1)\r\n//   let aYearAgo = new Date((new Date()).setYear(2020))\r\n  let aYearAgo = adjustMonthDate(-12, (new Date).getDate())\r\n\r\n  return {endOfCurrentMonth: endOfCurrentMonth, startOfOneMonthAgo: startOfOneMonthAgo, startOfTwoMonthsAgo:startOfTwoMonthsAgo ,startOfThreeMonthsAgo: startOfThreeMonthsAgo, startOfSixMonthsAgo, startOfNineMonthsAgo:startOfNineMonthsAgo, startOfTwelveMonthsAgo: startOfTwelveMonthsAgo, aYearAgo: aYearAgo}\r\n}\r\n\r\n/**\r\n * gives the last date or first date of a month found by shifting in the params\r\n * @param {number} shiftMonth  how much to shift month from current month\r\n * @param {number} day what date to set it\r\n * @returns \r\n */\r\nfunction adjustMonthDate(shiftMonth, day) {\r\n    let date = new Date();\r\n    date.setMonth(date.getMonth() + shiftMonth);\r\n    date.setDate(day)\r\n\r\n    return date\r\n}\r\n\r\nexport {updateDate, timeZone, timeBetween, weekNumber, oneWeek, edgeDaysOfEachMonth}\r\n","import axios from 'axios';\r\nimport * as myDate from './date.js';\r\n\r\nexport let starterURL = 'https://react-g-calendar-analyzer.herokuapp.com/'; \r\nlet calendarList = [];\r\nlet eventList = [];\r\nlet gapi = window.gapi; \r\n\r\n// async function loadAndInitGapi() {\r\n//   await gapi.load('client:auth2', initClient);\r\n\r\n//   \r\n\r\n// }\r\n\r\n/**\r\n * for each calendar request events between dayBehind and dayAhead dates\r\n * @param {date} dayBehind \r\n * @param {date} dayAhead \r\n */\r\n   export async function listOfCalendars(dayBehind, dayAhead) {\r\n    try {\r\n      if(!(gapi.client.calendar)) {  //if undefined load it first\r\n\r\n        // await loadAndInitGapi()\r\n      }\r\n      let response = await gapi.client.calendar.calendarList.list({});\r\n      let calendars = response.result.items;\r\n      for(let i = 0; i< calendars.length; i++) {\r\n          let calendar = calendars[i];\r\n          calendarList.push(calendar.summary)\r\n          await events('day', calendar.summary, calendar.id, dayBehind.toISOString(), dayAhead.toISOString());\r\n        }\r\n    } catch (error) {\r\n      console.log('error in requestAndStore-> listOfCalendars ' + error.message);\r\n    }\r\n  }\r\n\r\n  /**\r\n * for a given week, it adds up the hours for each calendar \r\n * by making sure events that start the previos week or spans to the next week \r\n * are correctly updated \r\n * \r\n * @param {string} timeId \r\n * @param {string} calName \r\n * @param {*} calId \r\n * @param {dateISOString} minDate \r\n * @param {dateISOString} maxDate \r\n * \r\n * Eventually, it will populate @object weeklyData and call @function sendToServer() \r\n */\r\n async function events(timeId, calName, calId, minDate, maxDate) {\r\n\r\n  try {\r\n    let response = await gapi.client.calendar.events.list({\r\n      'calendarId': calId,\r\n      'singleEvents': true,\r\n      // 'orderBy': 'startTime',\r\n      'timeZone': myDate.timeZone(new Date().toString()),\r\n      'timeMin': minDate,\r\n      'timeMax': maxDate,\r\n      'maxResults': 2400,\r\n      \r\n  });\r\n\r\n  const events = response.result.items;\r\n  for(const event of events) {\r\n    await filterAndPost(event, calName)    \r\n  }\r\n\r\n  } catch (error) {\r\n    console.log('error in requestAndStore-> events: ' + error.message)\r\n  }\r\n }\r\n\r\n /**\r\n  * filters events and sends them to backend to be stored in db\r\n  * @param {google event Object} event \r\n  * @param {String} calName \r\n  * @returns \r\n  */\r\n async function filterAndPost(event, calName) {\r\n   if (event.summary !== undefined && !event.start.date) { // ignores undefined and all day events\r\n    if (!(eventList.includes(event.summary))) {\r\n      eventList.push(event.summary)\r\n    }\r\n    let eventStartsAt = new Date(event.start.dateTime);\r\n    let eventEndsAt = new Date(event.end.dateTime);\r\n    let eventDuration =  roundTo2Decimals(myDate.timeBetween(eventStartsAt, eventEndsAt).hours)\r\n\r\n    //if event goes to the next day break it into to events upto 11:59:59 and 12 after that\r\n    if (eventStartsAt.getDate() !== eventEndsAt.getDate()) {\r\n      let dayEndsAt = (new Date(eventStartsAt))\r\n      dayEndsAt.setHours(23, 59, 59)\r\n      let nextDayStartsAt = (new Date(eventEndsAt));\r\n      nextDayStartsAt.setHours(0,0,0)\r\n      let weekNum1 = myDate.weekNumber(eventStartsAt)\r\n      let weekNum2 = myDate.weekNumber(eventEndsAt)\r\n      let monthNum1 = eventStartsAt.getMonth()\r\n      let monthNum2 = eventEndsAt.getMonth()\r\n      let eventDuration1 = roundTo2Decimals(myDate.timeBetween(eventStartsAt, dayEndsAt).hours)\r\n      let eventDuration2 = roundTo2Decimals(myDate.timeBetween(nextDayStartsAt, eventEndsAt).hours)\r\n      await sendPost(eventStartsAt.toDateString(), event.summary, eventStartsAt, dayEndsAt, calName, event.description, eventDuration1, weekNum1, monthNum1)\r\n      await sendPost(eventEndsAt.toDateString(), event.summary, nextDayStartsAt, eventEndsAt, calName, event.description, eventDuration2, weekNum2, monthNum2)\r\n      \r\n    } else {\r\n      let weekNum = myDate.weekNumber(eventStartsAt)\r\n      let monthNum = eventStartsAt.getMonth()\r\n      await sendPost(eventStartsAt.toDateString(), event.summary, eventStartsAt, eventEndsAt, calName, event.description, eventDuration, weekNum, monthNum)\r\n    }\r\n    \r\n   }\r\n\r\n    return \r\n}\r\n\r\n export async function sendPost(id, eventName, startTime, endTime, calName, description, duration, weekNum, monthNum ){\r\n  try {\r\n   let result = await axios ({\r\n     method: 'post',\r\n     url: `${starterURL}api/daily/`,\r\n     data: {\r\n        \"id\": id,\r\n        \"eventName\": eventName,\r\n        \"startTime\": startTime,\r\n        \"endTime\": endTime,\r\n        \"calName\": calName,\r\n        \"description\": description,\r\n        \"duration\": duration,\r\n        \"weekNum\": weekNum,\r\n        \"monthNum\": monthNum\r\n     }\r\n     \r\n })\r\n return result\r\n//  alert(JSON.stringify(result))\r\n  } catch (error) {\r\n    console.log('error in requestAndStore-> sendPost: ' + error.message)\r\n  }\r\n }\r\n\r\n export function roundTo2Decimals(number) {\r\n   return Math.round(number*100)/100\r\n }","import '../../App.css'\r\n\r\nexport default function Loader () {\r\n    return(\r\n        <div class=\"loader\">\r\n            \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport * as myRequestAndStore from './requestAndStore.js'\r\nimport axios from 'axios';\r\nimport * as myDate from './date.js';\r\nimport Loader from '../src/pages/toDo/Loader.js';\r\n\r\n  let gapi = window.gapi\r\n/**\r\n   *  On load, called to load the auth2 library and API client library.\r\n   */\r\n  window.onload = handleClientLoad;\r\n  function handleClientLoad() {\r\n    gapi.load('client:auth2', initClient);\r\n  }\r\n\r\n  /**\r\n   *  Initializes the API client library and sets up sign-in state\r\n   *  listeners.\r\n   */\r\n    function initClient() {\r\n    gapi.client.init({\r\n        // Client ID and API key from the Developer Console\r\n      apiKey: 'AIzaSyBYxwNwT53EbvQNvhVCDD3FZW3KvTQWRBs',\r\n      clientId: '958765352456-n0b4hg33876562lgerugi6qfei2jjaja.apps.googleusercontent.com',\r\n      // Array of API discovery doc URLs for APIs used by the quickstart\r\n      discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest'],\r\n      // Authorization scopes required by the API; multiple scopes can be\r\n      // included, separated by spaces.\r\n      scope: 'https://www.googleapis.com/auth/calendar.readonly'\r\n    }).then(function () {\r\n     \r\n      // Listen for sign-in state changes.\r\n      gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\r\n\r\n      // Handle the initial sign-in state.\r\n      updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\r\n    \r\n    }, function(error) {\r\n      alert(JSON.stringify(error, null, 2));\r\n    });\r\n  }\r\n\r\n  /**\r\n   *  Called when the signed in status changes, to update the UI\r\n   *  appropriately. After a sign-in, the API is called.\r\n   */\r\n    async function updateSigninStatus(signedIn) {\r\n    if (signedIn) {\r\n      console.log('signedIn so change view to show navigation')\r\n\r\n\r\n    } else {\r\n      console.log(\"signing you out \\n change view to home page\")\r\n      // let authorize = document.getElementById('authorize')\r\n      // authorize.click()\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * functi\r\n   *  Sign in the user upon button click.\r\n   */\r\n    async function handleAuthClick(event) {\r\n      try {\r\n        if(gapi.auth2.getAuthInstance().isSignedIn.get()) {\r\n          console.log('already signed in ')\r\n          window.location.replace(`./daily/calName/all/${(new Date()).toDateString()}`)\r\n        } else {\r\n          await gapi.auth2.getAuthInstance().signIn();\r\n          console.log('first time so making a request')\r\n          let date = myDate.edgeDaysOfEachMonth()\r\n          // myRequestAndStore.listOfCalendars(date.startOfTwelveMonthsAgo, date.endOfCurrentMonth)\r\n          let d = document.createElement('div')\r\n          d.className = 'loader'\r\n          document.getElementById('home-page').replaceWith(d)\r\n\r\n          await myRequestAndStore.listOfCalendars(date.startOfTwoMonthsAgo, date.endOfCurrentMonth)\r\n          \r\n          window.location.replace(`./daily/calName/all/${(new Date()).toDateString()}`)\r\n        }\r\n      } catch (error) {\r\n        alert(error.message)\r\n      }\r\n  }\r\n\r\n  /**\r\n   *  Sign out the user upon button click.\r\n   */\r\n  export async function handleSignoutClick(event) {\r\n    await sendDelete();\r\n    gapi.auth2.getAuthInstance().signOut();\r\n    window.location.replace('/')\r\n  }\r\n\r\n  async function sendDelete(){\r\n    try {\r\n     let result = await axios ({\r\n       method: 'delete',\r\n       url: `${myRequestAndStore.starterURL}api/daily/`,\r\n     })\r\n    // alert(JSON.stringify(result))\r\n    } catch (error) {\r\n      alert('error in requestAndStore-> sendPost: ' + error.message)\r\n    }\r\n  };\r\n\r\n  let App = () =>{\r\n    return (\r\n      <div id = 'app' className=\"App\">\r\n        <header className=\"App-header\">\r\n        < Homepage onClick={handleAuthClick} />\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n  \r\nlet LeftSection = (props) => {\r\n  return (\r\n    <div class=\"column is-three-fifths\">\r\n              <div id = \"firstRead\">\r\n                <div class=\"block\">\r\n                  <h1 class=\"title\" style={{color: \"lightblue\"}}>Analyze Your Calendar</h1>\r\n                  <h6 class=\"subtitle\" style={{color: \"gray\"}}>Made with Google Calendar API</h6>\r\n                </div>\r\n                < hr style={{width:\"100%\"}} />\r\n                <div class=\"block\">\r\n                  <p class = 'homePageParagraph'> Analyze and learn how you spent your past days, weeks, or months from your google calendar.</p> \r\n                <div class=\"block\">\r\n                  <p> Pressing the 'Authorize' button authorizes this web app to read your google calendar events.\r\n                    Access to your calendar events data is terminated once you sign out. \r\n                    See <a class=\"tag is-primary is-light\"> Privacy Policy </a> to learn more:\r\n                </p>\r\n                </div> \r\n                <div class=\"block\">\r\n                  <button onClick={props.onClick} id=\"authorize_button\"  class=\"button is-primary\">\r\n                    <span class=\"icon\">\r\n                      <i class=\"fab fa-google\"></i>\r\n                    </span>\r\n                    <span id='authorize_span'> Authorize</span>\r\n                  </button>            \r\n                </div>  \r\n              </div>\r\n              </div>\r\n              \r\n            </div>\r\n  )\r\n}\r\n\r\nlet RightSection = () => {\r\n  return (\r\n    <div class=\"column\">\r\n              <div id = 'authorize-view'>\r\n                \r\n                <p> Currently the app is not verifed by Google as it is in a developement mode. \r\n                  You can use the following email and password for authorization. \r\n                    </p>\r\n                    <br/>\r\n                  <ul>\r\n                    <li>username: comingSoon</li>\r\n                    <li>password: comingSoon</li>\r\n                  </ul>\r\n                  <br/>\r\n                  <p>Feel free to log in to <a href=\"https://accounts.google.com/signin/v2/identifier?service=cl&passive=1209600&osid=1&continue=https%3A%2F%2Fcalendar.google.com%2Fcalendar%2Fr&followup=https%3A%2F%2Fcalendar.google.com%2Fcalendar%2Fr&flowName=GlifWebSignIn&flowEntry=ServiceLogin\"> Google Calendar</a> and update events as well</p>\r\n                  \r\n              </div>\r\n            </div>\r\n  )\r\n}\r\n  \r\nlet Homepage = (props) => {\r\n  return(\r\n    <div class=\"hero-body\" id='home-page'>\r\n        <div class=\"container\">\r\n          <div class=\"columns\">\r\n              <LeftSection onClick = {props.onClick} />\r\n              < RightSection />\r\n          </div>       \r\n        </div>  \r\n      </div>\r\n  )\r\n}\r\nexport default App;","import '../../App.css'\r\nimport * as myDate from '../../date.js'\r\n\r\nexport default function ComingSoon () {\r\n    return (\r\n        // style={{'background-image' : \"url('https://www.howtogeek.com/wp-content/uploads/2018/06/shutterstock_1006988770.png?height=200p&trim=2,2,2,2')\" }}\r\n    \r\n        <div class=\"bgimg\" style={{ minHeight: '100%' }}>\r\n        <div class=\"topleft\">\r\n          <p>GCAnalayzer</p>\r\n        </div>\r\n        <div class=\"middle\">\r\n          <h1>COMING SOON</h1>\r\n          <hr/>\r\n          \r\n            <CountDown />\r\n        \r\n          \r\n        </div>\r\n        <div class=\"bottomleft\">\r\n          <p> citation: <a href=\"https://www.w3schools.com/howto/howto_css_coming_soon.asp\"> w3Schools </a> </p>\r\n        </div>\r\n      </div>\r\n \r\n    )\r\n}\r\n\r\n\r\nlet CountDown = () => {\r\n  let date = new Date(\"Dec 27, 2021 15:37:25\")\r\n  \r\n  let difference = myDate.timeBetween(new Date() , date)\r\n    // Time calculations for days, hours, minutes and seconds\r\n    let days = difference.days\r\n  \r\n    // // Display the result in an element with id=\"demo\"\r\n    // document.getElementById(\"demo\").innerHTML = days + \"d \" + hours + \"h \"\r\n    // + minutes + \"m \" + seconds + \"s \";\r\n    return( \r\n      Math.floor(days) + \" days\"\r\n    )\r\n\r\n\r\n}","import ComingSoon from './ComingSoon.js'\r\nconst Home = () => {\r\n  \r\n    return (\r\n      <ComingSoon />\r\n    );\r\n  };\r\n  \r\n  export default Home;","import axios from 'axios';\r\nimport {handleSignoutClick} from '../../App.js'\r\nlet starterURL = 'http://localhost:5000/' \r\n\r\nconst Contact = () => {\r\n  async function sendDelete(){\r\n    try {\r\n     let result = await axios ({\r\n       method: 'delete',\r\n       url: `${starterURL}api/daily/`,\r\n     })\r\n    alert(JSON.stringify(result))\r\n    } catch (error) {\r\n      alert('error in requestAndStore-> sendPost: ' + error.message)\r\n    }\r\n    handleSignoutClick()\r\n  };\r\n  \r\n  return(\r\n    <div>\r\n      <div class = 'block'> Contact me at merehatibebadane@gmail.com </div>\r\n      <button onClick={sendDelete}> Erase All Data </button>\r\n    </div>\r\n    \r\n  )\r\n  };\r\n  \r\n  export default Contact;","import React from 'react';\r\nimport { Outlet, Link } from 'react-router-dom';\r\nimport 'bulma/css/bulma.min.css';\r\nimport isSignedIn from \"../App.js\";\r\nimport * as myDate from '../date.js'\r\n\r\nfunction Nav(props) {\r\n     return(\r\n        <>\r\n          <nav class=\"navbar is-light\" role=\"navigation\" aria-label=\"main navigation\">\r\n            <NavBarSymbols />\r\n            <div id=\"navbarBasicExample\" class=\"navbar-menu\"> \r\n                <LeftNavBarChocies />\r\n                <RightNavBarChocies onSignout = {props.onSignout} />\r\n            </div>  \r\n        </nav>\r\n            <Outlet />\r\n        </>\r\n    )\r\n}\r\n\r\nfunction NavBarSymbols () {\r\n    return(\r\n        <div class=\"navbar-brand\">\r\n        <Link to=\"/home\" class=\"navbar-item\" > \r\n        {/* <img src=\"https://bulma.io/images/bulma-logo.png\" width=\"112\" height=\"28\"></img> */}\r\n            \r\n            <span class=\"icon-text\">\r\n                <span class=\"icon\">\r\n                <i class=\"fas fa-history\"></i>\r\n                </span>\r\n                <span class=\"m-0 p-0 has-text-link\" id = 'logo'>GCAnalyzer</span>\r\n            </span>\r\n        </Link>\r\n\r\n        <a role=\"button\" class=\"navbar-burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\r\n        <span aria-hidden=\"true\"></span>\r\n        <span aria-hidden=\"true\"></span>\r\n        <span aria-hidden=\"true\"></span>\r\n        </a>\r\n    </div>\r\n    )\r\n}\r\n\r\nfunction LeftNavBarChocies() {\r\n    let today = new Date()\r\n    let currentWeekNum = myDate.weekNumber(today)\r\n    let currentMonthNum = (new Date()).getMonth()\r\n    return (\r\n        <div id=\"left-navbar-choices\" class=\"navbar-start\">\r\n            <Link id={'daily'} to={`/daily/calName/all/${today.toDateString()}`} key={'period'} class=\"navbar-item\" > Daily </Link>\r\n            <Link to={`/weekly/calName/all/${currentWeekNum}`} class=\"navbar-item\"> Weekly </Link>\r\n            <Link id={`monthly`} to={`/monthly/calName/all/${currentMonthNum}`} class=\"navbar-item\"> Monthly </Link> \r\n            <Link id= {`custom`} to=\"/custom\" class=\"navbar-item\"> Custom </Link> \r\n        </div>\r\n    )\r\n}\r\n\r\nfunction RightNavBarChocies (props) {\r\n    return (\r\n        <div class=\"navbar-end\" id=\"right-navbar-choices\" >\r\n        <div class=\"navbar-item has-dropdown is-hoverable\">\r\n            <span  class=\"navbar-item\"> More </span>\r\n            <div class=\"navbar-dropdown\">\r\n                <a disabled class=\"navbar-item\">\r\n                    About\r\n                </a>\r\n                <Link to=\"/contact\" class=\"navbar-item\"> Contatct Me </Link>\r\n                <Link id={'refresh'} to=\"#\" class=\"navbar-item\"> Refresh Data </Link> \r\n                <hr class=\"navbar-divider\"/> \r\n                <a class=\"navbar-item is-disabled\">\r\n                    Report an issue\r\n                </a>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"navbar-item\">\r\n            <div  class=\"buttons\"  >\r\n                <button onClick = {props.onSignout} id='signout-button' class=\"button is-primary\">\r\n                    Sign Out\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n//navebar burger and navebar menu toggle is-active when pressed\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\r\n    // Get all \"navbar-burger\" elements\r\n    const $navbarBurgers = Array.prototype.slice.call(document.querySelectorAll('.navbar-burger'), 0);\r\n  \r\n    // Check if there are any navbar burgers\r\n    if ($navbarBurgers.length > 0) {\r\n  \r\n      // Add a click event on each of them\r\n      $navbarBurgers.forEach( el => {\r\n        el.addEventListener('click', () => {\r\n  \r\n          // Get the target from the \"data-target\" attribute\r\n          const target = el.dataset.target;\r\n          const $target = document.getElementById(target);\r\n  \r\n          // Toggle the \"is-active\" class on both the \"navbar-burger\" and the \"navbar-menu\"\r\n          el.classList.toggle('is-active');\r\n          $target.classList.toggle('is-active');\r\n  \r\n        });\r\n      });\r\n    }\r\n  \r\n  });\r\n\r\nexport default Nav;","import ComingSoon from './ComingSoon.js' \r\nimport '../../App.css'\r\nlet Custom = () => {\r\n    \r\n    return(\r\n      \r\n      <ComingSoon />\r\n      \r\n       // <img src='https://wallpaperaccess.com/full/112097.jpg' alt=\"Trulli\" width=\"100%\" height=\"0%\"></img>\r\n    )\r\n}\r\n\r\nexport default Custom\r\n\r\n{/* <div class = 'bgimg' style={{'background-image': \"url('https://wallpaperaccess.com/full/112097.jpg')\"}}>\r\n<div class='middle'>\r\n  <strong>COMING SOON </strong>\r\n</div>\r\n\r\n</div> */}","import {useState, useEffect} from \"react\";\r\n\r\nlet proxy = \"https://react-g-calendar-analyzer.herokuapp.com\";\r\n\r\nfunction useFetch (url) {\r\n    // alert('url in useFetch is: ' + proxy + '' + url)\r\n    let [data, setData] = useState(null);\r\n    useEffect(() => {\r\n        fetch((proxy+ '' + url))\r\n            .then((res) => res.json())\r\n            .then((data) => setData(data))\r\n    }, [url])\r\n    if (data) {\r\n        // alert('in useFetch to send data is: ' +JSON.stringify(data))\r\n        return data;\r\n    }\r\n   \r\n}\r\n\r\n// async function useFetch(url) {\r\n    \r\n//     try {\r\n//       alert('in use Fetch about to send request')\r\n//       const response = await axios.get(proxy+ '' + url);\r\n//       let data = await response.data\r\n//       alert(' in use fetch about to respond with data ' + JSON.stringify(data));\r\n//       return(data)\r\n//     } catch (error) {\r\n//       alert(error.message);\r\n//       return null\r\n//     }\r\n//   }\r\n\r\nexport default useFetch;","import '../../App.css'\r\nimport React from \"react\"\r\nimport { useTable } from 'react-table'\r\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\r\nimport {roundTo2Decimals} from '../../requestAndStore.js'\r\n\r\nlet productivity = {counter: {productive: 0, neutral: 0, destructive: 0, others:0}, list:{productivityList: [\"education\", \"med\", \"work\", \"tasks\"], neturalList:[\"life\"], destructiveList:['entertainment']}}\r\n\r\n\r\nfunction  ViewButtons (props) {\r\n    return(\r\n          <div class='buttons has-addons '>\r\n            <button class = \"button\" > Graph </button>\r\n            <button  value = \"table\" class = 'button is-selected' onClick = {(event) => handleViewButton(props.type, event.target.value)}> Table</button>\r\n            <button class='button'> Text </button>\r\n          </div>\r\n    )\r\n  }\r\n\r\n  let handleViewButton = (type, selected) => {\r\n    if (type == \"calendar\") {\r\n      alert('in ' + type + ' view ' + selected  +  ' is selected.')\r\n    }\r\n  }\r\n\r\n  export let TableView = (props) => {\r\n    let columnsData, data\r\n    if (props.type == 'calName') {\r\n      columnsData = [\r\n        {\r\n          Header: 'Calendar',\r\n          accessor: 'calName', // accessor is the \"key\" in the data\r\n        },\r\n        {\r\n          Header: 'Hours',\r\n          accessor: 'totalHours',\r\n        },\r\n      ]\r\n  \r\n       data = [\r\n        {\r\n          \"calName\": 'Loading',\r\n          \"totalHours\": 0,\r\n          \"id\": 'Loading',\r\n          \r\n        }\r\n      ]\r\n    } else {\r\n      columnsData = [\r\n        {\r\n          Header: 'Event',\r\n          accessor: 'eventName', // accessor is the \"key\" in the data\r\n        },\r\n        {\r\n          Header: 'Hours',\r\n          accessor: 'totalHours',\r\n        },\r\n      ]\r\n \r\n       data = [\r\n        {\r\n          \"eventName\": 'Loading',\r\n          \"totalHours\": 0,\r\n          \"id\": 'Loading',\r\n          \r\n        }\r\n      ]\r\n    }\r\n \r\n      if (props.dataC) {\r\n        data = props.dataC\r\n      }\r\n      \r\n      return(\r\n        <div class = 'column' >\r\n            {/* <ViewButtons type='calendar'/> */}\r\n            <TableData columnsT={columnsData} dataT={data}/>\r\n\r\n        </div>\r\n       \r\n      )\r\n    \r\n  }\r\n  \r\n  \r\n \r\n \r\n  function TableData(props) {\r\n    \r\n    const columns = React.useMemo(\r\n      () => props.columnsT, []\r\n    )\r\n    let data = props.dataT\r\n  \r\n    const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n      headerGroups,\r\n      rows,\r\n      prepareRow,\r\n    } = useTable({ columns, data })\r\n  \r\n    return (\r\n      <table class='table' {...getTableProps()} style={{ border: 'solid 1px blue' }}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th\r\n                  {...column.getHeaderProps()}\r\n                  style={{\r\n                    border: 'solid 1px blue',\r\n                    borderBottom: 'solid 2px red',\r\n                    background: 'aliceblue',\r\n                    color: 'black',\r\n                    fontWeight: 'bold',\r\n                    \r\n                  }}\r\n                >\r\n                  {column.render('Header')}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map(row => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return (\r\n                    <td\r\n                      {...cell.getCellProps()}\r\n                      style={{\r\n                        padding: '10px',\r\n                        border: 'solid 1px gray',\r\n                        background: 'papayawhip',\r\n                      }}\r\n                    >\r\n                      {cell.render('Cell')}\r\n                    </td>\r\n                  )\r\n                })}\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    )\r\n  }\r\n  \r\n \r\n  function percentage(decimal) {\r\n    return (Math.round(decimal * 100) + '%')\r\n  }\r\n\r\n  export let Productivity = (props) => {\r\n    if (props.data) {\r\n        measureProductivity(props.data)\r\n    }\r\n    let totalRecorded = productivity.counter.productive + productivity.counter.neutral + productivity.counter.destructive + productivity.counter.others\r\n    let columnsData = [\r\n      {\r\n        Header: 'Productive',\r\n        accessor: 'productive', // accessor is the \"key\" in the data\r\n      },\r\n      {\r\n        Header: 'Neutral',\r\n        accessor: 'neutral',\r\n      },\r\n      {\r\n        Header: 'Destructive',\r\n        accessor: 'destructive',\r\n      },\r\n    ]\r\n    let data = [productivity.counter, {productive: percentage(productivity.counter.productive/totalRecorded), neutral:  percentage(productivity.counter.neutral/totalRecorded), destructive: percentage(productivity.counter.destructive/totalRecorded)}]\r\n\r\n    let dataToChart = {\r\n      labels: ['productive', 'neutral', 'destructive'],\r\n      datasets: [\r\n        {\r\n          label: 'hours',\r\n          data: [percentage(productivity.counter.productive/totalRecorded), percentage(productivity.counter.neutral/totalRecorded), percentage(productivity.counter.destructive/totalRecorded) ],\r\n          // data: [18, 39, 17],\r\n          backgroundColor: [\r\n            'rgba(75, 255, 0, 19)',\r\n            'rgba(125, 99, 255, 24)',\r\n            'rgba(255, 15, 6, 12)',\r\n          ], \r\n          borderColor: [\r\n            'rgba(75, 192, 192, 0.2)',\r\n            'rgba(54, 162, 235, 0.2)',\r\n            'rgba(255, 99, 132, 0.2)',\r\n          ],  \r\n          borderWidth: 1,      \r\n          \r\n        },\r\n        \r\n\r\n\r\n      ],\r\n\r\n    }\r\n\r\n  \r\n    return (\r\n      <div class = 'column is-centered'> \r\n\r\n              {/* <h1 style={{color: 'brown', 'text-align': 'center', 'margin-bottom': '2px'}}> Productivity </h1> */}\r\n              {/* <ViewButtons type='productivity'/> */}\r\n              {props.show == 'table' ? \r\n                <TableData columnsT={columnsData} dataT={data}/>:\r\n                <TextData data = {productivity.counter} />\r\n              }\r\n      \r\n          <div class= 'column is-centered' >\r\n          {/* <Chart\r\n              width={\"100%\"}\r\n              height={\"100%\"}\r\n              chartType=\"PieChart\"\r\n              loader={<div>Loading Chart</div>}\r\n              data={[\r\n                ['Productivity', 'Hours per Day'],\r\n                ['Pro', productivity.counter.productive],\r\n                ['Neu', productivity.counter.neutral],\r\n                ['Des', productivity.counter.destructive],\r\n              ]}\r\n              options={{\r\n                // title: 'My Daily Activities',\r\n                // legend: {\r\n                //   position: 'labeled'\r\n                // },\r\n                pieSliceText: 'label',\r\n                legend: 'none' \r\n                \r\n              }}\r\n              rootProps={{ 'data-testid': '1' }}\r\n            /> */}\r\n          </div>\r\n          <div class= 'column is-centered' >\r\n            <strong> Total Hours Recorded: </strong> {roundTo2Decimals(totalRecorded)}\r\n          </div>\r\n        </div>\r\n\r\n    )\r\n  }\r\n\r\n  let TextData = (props) => {\r\n\r\n    return(\r\n      <>\r\n            <div class= 'column'> \r\n              <strong> Productive: </strong>  {props.data.productive} \r\n            </div>\r\n\r\n            <div class= 'column'> \r\n              <strong> Neutral: </strong>  {props.data.neutral}\r\n            </div>\r\n\r\n            <div class= 'column'> \r\n              <strong> Destructive: </strong>  {props.data.destructive}\r\n            </div>\r\n      </>\r\n      )\r\n            \r\n          \r\n  }\r\n\r\n  let measureProductivity = (records) => {\r\n    productivity.counter ={productive: 0, neutral: 0, destructive: 0, others:0}\r\n    records.forEach((record) => {\r\n      if (productivity.list.productivityList.includes(record.calName.toLowerCase())) {\r\n        productivity.counter.productive += record.totalHours\r\n      } else if (productivity.list.neturalList.includes(record.calName.toLowerCase())) {\r\n        productivity.counter.neutral += record.totalHours\r\n      } else if (productivity.list.destructiveList.includes(record.calName.toLowerCase())) {\r\n        productivity.counter.destructive += record.totalHours\r\n      } else {\r\n        productivity.counter.others += record.totalHours\r\n      }\r\n    })\r\n    \r\n  }\r\n\r\n","import * as myDate from '../../date.js';\r\nimport React, {useState} from \"react\"\r\nimport { Calendar } from \"react-modern-calendar-datepicker\";\r\nimport useFetch from \"../../useFetch.js\";\r\nimport {TableView} from \"./TypeView.js\";\r\n\r\nexport let DailyCalendarView = (props) => {\r\n    let date = props.dateRange\r\n    let info = ''\r\n    if(date.getDate() == (myDate.updateDate((new Date()), - 1)).getDate()) {\r\n      info = 'Yesterday'\r\n    } else if(date.getDate() == (new Date()).getDate() ){\r\n      info = `Today`\r\n    } else if (date.getDate() == (myDate.updateDate((new Date()), 1)).getDate()) {\r\n      info = `Tomorrow`\r\n    }\r\n    let options = {weekday: \"short\",  month: \"short\", day: \"numeric\", year: \"numeric\"}\r\n    return (\r\n      <div class = 'column is-centered is-4'>\r\n        <div class=\"columns \">\r\n          <div  class=\"column is-centered\">\r\n          <h1>{info} </h1>\r\n            <DailyDateRangeView \r\n            dateRange={props.dateRange} \r\n            onClick={props.onClick}\r\n            style={{height:10}}/>\r\n          </div>\r\n        </div>\r\n        \r\n        <DailyShowCalendar onClick={props.onClick} dateRange={props.dateRange} />\r\n        <p>Today's date is <strong>{new Date().toLocaleDateString(\"en-US\", options)} </strong> , week {myDate.weekNumber(new Date())}  </p>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n\r\n  let DailyDateRangeView = (props) => {\r\n    \r\n    let date = props.dateRange\r\n    // year not necessary\r\n    // if same month don't repeat month on weekEndsOn\r\n\r\n    let options = {weekday: \"short\",  month: \"short\", day: \"numeric\"}\r\n    date = date.toLocaleDateString(\"en-US\", options)\r\n    \r\n    return(\r\n      <div class=\"field has-addons is-centered\">\r\n          <p class=\"control\">\r\n          <button onClick={props.onClick} value= 'left' id=\"left-arrow\" class=\"button\"> \r\n            <span class=\"icon is-small\">\r\n              <i class=\"fas fa-arrow-circle-left\"></i>\r\n            </span>\r\n          </button>\r\n          </p>\r\n          <p class=\"control\">\r\n          <button class=\"button textInside\">\r\n            <span id=\"viewing\"> <strong>{date} </strong></span>\r\n          </button>\r\n          </p>\r\n          <p class=\"control\" >\r\n          <button onClick={props.onClick} value = 'right' id=\"right-arrow\" class=\"button\">\r\n            <span class=\"icon is-small\">\r\n              <i class=\"fas fa-arrow-alt-circle-right\"></i>\r\n          </span>\r\n          </button>\r\n          </p>\r\n        </div>\r\n    )\r\n  }\r\n  let DailyShowCalendar = (props) => {\r\n    //  // ✅ a change in default state: { from: ..., to: ... }\r\n    const defaultValue = {\r\n      year: props.dateRange.getFullYear(),\r\n      month: props.dateRange.getMonth() + 1,\r\n      day: props.dateRange.getDate(),\r\n    };\r\n    const [selectedDay, setSelectedDay] = useState(defaultValue);\r\n\r\n    return (\r\n      <Calendar\r\n      value={defaultValue}\r\n      onChange={props.onClick}\r\n      colorPrimary=\"#9c88ff\" // added this\r\n      calendarClassName=\"custom-calendar\" // and this\r\n      calendarTodayClassName=\"custom-today-day\" // also this\r\n      shouldHighlightWeekends\r\n    />\r\n    );\r\n  }\r\n\r\n\r\n  export let WeeklyCalendarView = (props) => {\r\n    let date = new Date(props.dateRange.weekEndsOn)\r\n    let weekNumber = myDate.weekNumber(date)\r\n    let currentWeek = myDate.weekNumber(new Date())\r\n  \r\n    if(weekNumber == (currentWeek - 1)) {\r\n      weekNumber = `${weekNumber} (previous week)`\r\n    } else if(weekNumber == currentWeek ){\r\n      weekNumber = `${weekNumber} (current week)`\r\n    } else if (weekNumber == (currentWeek + 1)) {\r\n      weekNumber = `${weekNumber} (next week)`\r\n    }\r\n    let options = {weekday: \"short\",  month: \"short\", day: \"numeric\", year: \"numeric\"}\r\n    return (\r\n      <div class = 'column is-centered'>\r\n        <h1>  Your week {weekNumber} summary </h1>\r\n        <WeeklyDateRangeView \r\n          dateRange={props.dateRange} \r\n          onClick={props.onClick}\r\n          style={{height:10}}/>\r\n        \r\n        <WeeklyShowCalendar onClick={props.onClick} dateRange={props.dateRange} />\r\n        <p>Today's date is <strong>{new Date().toLocaleDateString(\"en-US\", options)} </strong> , week {myDate.weekNumber(new Date())}  </p>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  let WeeklyDateRangeView = (props) => {\r\n    \r\n    let weekStartsOn = props.dateRange.weekStartsOn\r\n    let weekEndsOn = props.dateRange.weekEndsOn\r\n    // year not necessary\r\n    // if same month don't repeat month on weekEndsOn\r\n  \r\n    let options = {weekday: \"short\",  month: \"short\", day: \"numeric\"}\r\n    weekStartsOn = weekStartsOn.toLocaleDateString(\"en-US\", options)\r\n    \r\n    weekEndsOn = weekEndsOn.toLocaleDateString(\"en-US\", options)\r\n    return(\r\n      <div class=\"field has-addons is-centered\">\r\n          <p class=\"control\">\r\n          <button onClick={props.onClick} value= 'left' id=\"left-arrow\" class=\"button\"> \r\n            <span class=\"icon is-small\">\r\n              <i class=\"fas fa-arrow-circle-left\"></i>\r\n            </span>\r\n          </button>\r\n          </p>\r\n          <p class=\"control\">\r\n          <button class=\"button textInside\">\r\n            <span id=\"viewing\"> <strong>{weekStartsOn} </strong> to <strong> {weekEndsOn} </strong></span>\r\n          </button>\r\n          </p>\r\n          <p class=\"control\" >\r\n          <button onClick={props.onClick} value = 'right' id=\"right-arrow\" class=\"button\">\r\n            <span class=\"icon is-small\">\r\n              <i class=\"fas fa-arrow-alt-circle-right\"></i>\r\n          </span>\r\n          </button>\r\n          </p>\r\n        </div>\r\n    )\r\n  }\r\n  let WeeklyShowCalendar = (props) => {\r\n     // ✅ a change in default state: { from: ..., to: ... }\r\n     let weekStartsOn = props.dateRange.weekStartsOn\r\n     let weekEndsOn = props.dateRange.weekEndsOn\r\n     let defaultFrom = {\r\n      year: weekStartsOn.getFullYear(),\r\n      month: weekStartsOn.getMonth() + 1,\r\n      day: weekStartsOn.getDate(),\r\n    };\r\n    let defaultTo = {\r\n      year: weekEndsOn.getFullYear(),\r\n      month: weekEndsOn.getMonth() + 1,\r\n      day: weekEndsOn.getDate(),\r\n    };\r\n    \r\n    let defaultValue = {\r\n      from: defaultFrom,\r\n      to: defaultTo,\r\n    };\r\n    let [selectedDayRange, setSelectedDayRange] = useState(\r\n      defaultValue\r\n    );\r\n  \r\n    return (\r\n      <Calendar\r\n        value={defaultValue}\r\n        onChange={props.onClick}\r\n        colorPrimary=\"#0fbcf9\" // added this\r\n        colorPrimaryLight=\"rgba(75, 207, 250, 0.4)\" // and this\r\n        shouldHighlightWeekends\r\n      />\r\n    );\r\n    // const defaultFrom = {\r\n    //   year: 2021,\r\n    //   month: 10,\r\n    //   day: 31,\r\n    // };\r\n    // const defaultTo = {\r\n    //   year: 2021,\r\n    //   month: 11,\r\n    //   day: 5,\r\n    // };\r\n    // const defaultValue = {\r\n    //   from: defaultFrom,\r\n    //   to: defaultTo,\r\n    // };\r\n    // const [selectedDayRange, setSelectedDayRange] = useState(\r\n    //   defaultValue\r\n    // );\r\n  \r\n    // return (\r\n    //   <Calendar\r\n    //     value={selectedDayRange}\r\n    //     onChange={setSelectedDayRange}\r\n    //     colorPrimary=\"#0fbcf9\" // added this\r\n    //     colorPrimaryLight=\"rgba(75, 207, 250, 0.4)\" // and this\r\n    //     shouldHighlightWeekends\r\n    //   />\r\n    // );\r\n  }\r\n  \r\n  export let WeekDaysView = (props) => {\r\n    let dateRange = props.dateRange\r\n    return (\r\n      <div class = 'columns'>\r\n                <div class = 'column'>\r\n                  <Day date={(dateRange.weekStartsOn).toDateString()} />\r\n                </div>\r\n                <div class ='column'>\r\n                  <Day date={(myDate.updateDate(new Date(dateRange.weekStartsOn), 1 )).toDateString()} />\r\n                </div>\r\n                <div class ='column'>\r\n                  <Day date={(myDate.updateDate(new Date(dateRange.weekStartsOn), 2 )).toDateString()} />\r\n                </div>\r\n                <div class ='column'>\r\n                  <Day date={(myDate.updateDate(new Date(dateRange.weekStartsOn), 3 )).toDateString()} />\r\n                </div>\r\n                <div class ='column' >\r\n                  <Day date={(myDate.updateDate(new Date(dateRange.weekStartsOn), 4 )).toDateString()} />\r\n                </div>\r\n                <div class ='column'>\r\n                  <Day date={(myDate.updateDate(new Date(dateRange.weekStartsOn), 5)).toDateString()} />\r\n                </div>\r\n                <div class ='column'>\r\n                  <Day date={(myDate.updateDate(new Date (dateRange.weekStartsOn), 6 )).toDateString()} />\r\n                </div>\r\n                  \r\n              </div>\r\n    )\r\n  }\r\n\r\n  const Day =  (requested) => {\r\n    let data =  useFetch(`/api/daily/calName/all/${requested.date}/none`)\r\n    let calNames = ['Education', 'Entertainment', 'Life', 'MED', 'Work']\r\n    let editedData = {records: []}\r\n    // data = {\"records\":[{\"calName\":\"Education\",\"TotalHours\":1.25},{\"calName\":\"Entertainment\",\"TotalHours\":1},{\"calName\":\"Life\",\"TotalHours\":20.99972222222222}]}\r\n    if(data) {\r\n      let calendars = []\r\n      data.records.map(record => {\r\n        calendars.push( record.calName)\r\n      })\r\n      for(let i = 0; i < calNames.length; i++) {\r\n      \r\n        if(calendars.includes(calNames[i])) {\r\n          data.records.forEach(record => {\r\n            if (record.calName == calNames[i]) {\r\n              editedData.records[i] = record\r\n            }\r\n          })\r\n          \r\n        } else {\r\n          editedData.records[i] = {calName: calNames[i], totalHours: 0}\r\n        }\r\n      }\r\n\r\n      return (\r\n        <>\r\n          \r\n          <th class='tc' style={{\r\n                    // border: 'solid 1px blue',\r\n                    // borderBottom: 'solid 2px red',\r\n                    background: 'aliceblue',\r\n                    color: 'black',\r\n                    fontWeight: 'bold',\r\n                    textAlign: 'center',\r\n                    width: \"85%\"\r\n                    \r\n                  }} >{requested.date.slice(0,11)}</th>\r\n          <TableView dataC={editedData.records} type={'calName'}  />\r\n          {/* {editedData.records.map(\r\n            (record) =>  <td  class='tc'> {record.calName} : {Math.round(record.totalHours * 100)/100} </td>\r\n          )} */}\r\n        </>\r\n      )\r\n    } else {\r\n      return 'Loading'\r\n    }\r\n    };\r\n\r\n  export let MonthlyCalendarView = (props) => {\r\n    let date = new Date(props.dateRange)\r\n    let monthNumber = date.getMonth()\r\n    let currentMonth = (new Date()).getMonth()\r\n  \r\n    if(monthNumber == (currentMonth - 1)) {\r\n      monthNumber = `${monthNumber} (previous month)`\r\n    } else if(monthNumber == currentMonth ){\r\n        monthNumber = `${monthNumber} (current month)`\r\n    } else if (monthNumber == (currentMonth + 1)) {\r\n        monthNumber = `${monthNumber} (next month)`\r\n    }\r\n    let options = {weekday: \"short\",  month: \"short\", day: \"numeric\", year: \"numeric\"}\r\n    return (\r\n      <div class = 'column is-centered'>\r\n        <h1>  Your month {monthNumber} summary </h1>\r\n        <MonthlyDateRangeView \r\n          dateRange={props.dateRange} \r\n          onClick={props.onClick}\r\n          style={{height:10}}/>\r\n        \r\n        <MonthlyShowCalendar onClick={props.onClick} dateRange={props.dateRange} />\r\n        <p>Today's date is <strong>{new Date().toLocaleDateString(\"en-US\", options)} </strong> , week {myDate.weekNumber(new Date())}  </p>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  let MonthlyDateRangeView = (props) => {\r\n    \r\n    // let weekStartsOn = props.dateRange.weekStartsOn\r\n    // let weekEndsOn = props.dateRange.weekEndsOn\r\n    // year not necessary\r\n    // if same month don't repeat month on weekEndsOn\r\n  \r\n    let options = {month: \"short\", year: \"numeric\"}\r\n    // weekStartsOn = weekStartsOn.toLocaleDateString(\"en-US\", options)\r\n    \r\n    // weekEndsOn = weekEndsOn.toLocaleDateString(\"en-US\", options)\r\n    return(\r\n      <div class=\"field has-addons is-centered\">\r\n          <p class=\"control\">\r\n          <button onClick={props.onClick} value= 'left' id=\"left-arrow\" class=\"button\"> \r\n            <span class=\"icon is-small\">\r\n              <i class=\"fas fa-arrow-circle-left\"></i>\r\n            </span>\r\n          </button>\r\n          </p>\r\n          <p class=\"control\">\r\n          <button class=\"button textInside\">\r\n            <span id=\"viewing\"> <strong> {props.dateRange.toLocaleDateString('en-US', options)} </strong></span>\r\n          </button>\r\n          </p>\r\n          <p class=\"control\" >\r\n          <button onClick={props.onClick} value = 'right' id=\"right-arrow\" class=\"button\">\r\n            <span class=\"icon is-small\">\r\n              <i class=\"fas fa-arrow-alt-circle-right\"></i>\r\n          </span>\r\n          </button>\r\n          </p>\r\n        </div>\r\n    )\r\n  }\r\n  let MonthlyShowCalendar = (props) => {\r\n     // ✅ a change in default state: { from: ..., to: ... }\r\n     let defaultFrom = {\r\n      year: props.dateRange.getFullYear(),\r\n      month: props.dateRange.getMonth() + 1,\r\n      day: 1,\r\n    };\r\n    // get last date\r\n    let nextDate = new Date(props.dateRange)\r\n    nextDate.setMonth(props.dateRange.getMonth() + 1)\r\n    nextDate.setDate(0)\r\n\r\n    let defaultTo = {\r\n        year: props.dateRange.getFullYear(),\r\n        month: props.dateRange.getMonth() + 1,\r\n        day: nextDate.getDate(),\r\n    };\r\n    \r\n    let defaultValue = {\r\n      from: defaultFrom,\r\n      to: defaultTo,\r\n    };\r\n    let [selectedDayRange, setSelectedDayRange] = useState(\r\n      defaultValue\r\n    );\r\n  \r\n    return (\r\n      <Calendar\r\n        value={defaultValue}\r\n        onChange={props.onClick}\r\n        colorPrimary=\"#0fbcf9\" // added this\r\n        colorPrimaryLight=\"rgba(75, 207, 250, 0.4)\" // and this\r\n        shouldHighlightWeekends\r\n      />\r\n    );\r\n    // const defaultFrom = {\r\n    //   year: 2021,\r\n    //   month: 10,\r\n    //   day: 31,\r\n    // };\r\n    // const defaultTo = {\r\n    //   year: 2021,\r\n    //   month: 11,\r\n    //   day: 5,\r\n    // };\r\n    // const defaultValue = {\r\n    //   from: defaultFrom,\r\n    //   to: defaultTo,\r\n    // };\r\n    // const [selectedDayRange, setSelectedDayRange] = useState(\r\n    //   defaultValue\r\n    // );\r\n  \r\n    // return (\r\n    //   <Calendar\r\n    //     value={selectedDayRange}\r\n    //     onChange={setSelectedDayRange}\r\n    //     colorPrimary=\"#0fbcf9\" // added this\r\n    //     colorPrimaryLight=\"rgba(75, 207, 250, 0.4)\" // and this\r\n    //     shouldHighlightWeekends\r\n    //   />\r\n    // );\r\n  }\r\n","import {NavLink, Outlet, useParams, useNavigate} from 'react-router-dom'\r\nimport useFetch from '../useFetch'\r\nimport {TableView, Productivity} from './views/TypeView.js';\r\nimport * as myDate from '../date.js'\r\nimport{ DailyCalendarView} from './views/CalendarView.js'\r\nimport {WeeklyCalendarView} from './views/CalendarView.js'\r\nimport { WeekDaysView } from './views/CalendarView.js';\r\nimport {MonthlyCalendarView} from './views/CalendarView.js'\r\nimport Loader from './toDo/Loader.js'\r\nimport {listOfCalendars} from '../requestAndStore.js'\r\nimport {starterURL} from '../requestAndStore.js'\r\nlet gapi = window.gapi; \r\n\r\n\r\nlet firstTime = true\r\nexport async function FillDb () {\r\n  console.log(firstTime)\r\n  let date = myDate.edgeDaysOfEachMonth()\r\n  let url = `api/daily/calName/all/${(date.startOfSixMonthsAgo).toDateString()}/none`\r\n  fetch((starterURL+ '' + url))\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          if(data.records.length == 0) {\r\n              gapi.load('client:auth2', initClient);\r\n              function initClient() {\r\n                gapi.client.init({\r\n                    // Client ID and API key from the Developer Console\r\n                  apiKey: 'AIzaSyBYxwNwT53EbvQNvhVCDD3FZW3KvTQWRBs',\r\n                  clientId: '958765352456-n0b4hg33876562lgerugi6qfei2jjaja.apps.googleusercontent.com',\r\n                  // Array of API discovery doc URLs for APIs used by the quickstart\r\n                  discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest'],\r\n                  // Authorization scopes required by the API; multiple scopes can be\r\n                  // included, separated by spaces.\r\n                  scope: 'https://www.googleapis.com/auth/calendar.readonly'\r\n                }).then(async function () {\r\n\r\n                  document.getElementById('monthly').style.visibility = 'hidden'\r\n                  document.getElementById('custom').style.visibility = 'hidden'\r\n                  await listOfCalendars(date.startOfSixMonthsAgo, date.startOfTwoMonthsAgo)\r\n                  await listOfCalendars (date.startOfTwelveMonthsAgo, date.startOfSixMonthsAgo)\r\n                  document.getElementById('monthly').style.visibility = 'visible'\r\n                  document.getElementById('custom').style.visibility = 'visible'\r\n                \r\n                }, function(error) {\r\n                  console.log(JSON.stringify(error, null, 2));\r\n                });\r\n              }\r\n              \r\n          } \r\n        })\r\n          \r\n  \r\n  // if(data) {\r\n  //   data.records.length ? \r\n  //     alert(' data in FillDb: ' + JSON.stringify(data)) : \r\n  //     \r\n  // }\r\n  \r\n \r\n}\r\n\r\nexport default function Router () {\r\n\r\n  if(firstTime) { \r\n    console.log('calling FillDb')\r\n    FillDb()\r\n    firstTime = false\r\n  }\r\n      \r\n    let weekRange = {weekStartsOn: new Date('Sun Oct 31 2021'), weekEndsOn: new Date('Sat Nov 5 2021')}\r\n    let dateInMonth = new Date()\r\n    let params = useParams()\r\n    // alert(JSON.stringify(params) + ' ' + counter);\r\n    // counter +=1; \r\n    let navigate = useNavigate()\r\n    let {period, type, specific, date, detail} = params // period=daily/weekly/monthly/custom, type=calName/eventName specific=all/{calName}, date=date/weekNum/monthNum/customDates\r\n    let url = `/api/${period}/${type}/${specific}/${date}/none`\r\n    // alert('in router before requesting data: ')\r\n    let data = useFetch(url)\r\n    if(!data || !(data.records)) {\r\n      return <Loader /> \r\n    }\r\n    // alert(' in router after requesting data, data is: ' + JSON.stringify(data))\r\n    let dataLinkAdded \r\n    if(data) {\r\n        data = data.records\r\n        if(data.length) {\r\n          dataLinkAdded = data.map(addLink)\r\n          if(period == 'weekly') {\r\n            weekRange = myDate.oneWeek(data[0].id)\r\n         } else if (period == 'monthly') {\r\n           dateInMonth = new Date(data[0].id)\r\n         }\r\n      } \r\n        \r\n    }\r\n    let adjustPeriod = (e) => {\r\n        if(e.target && e.target.id) {\r\n            if (e.target.id == 'right-arrow') {\r\n              switch (period) {\r\n                case 'daily':\r\n                  let dayUpdated = myDate.updateDate(new Date(date), 1)\r\n                  date = dayUpdated.toDateString()\r\n                  break;\r\n                case 'weekly':\r\n                  date = parseInt(date) + 1\r\n                  break;\r\n                case 'monthly':\r\n                  date = parseInt(date) + 1\r\n                  dateInMonth.setMonth(dateInMonth.getMonth() + 1)\r\n                  break;\r\n                default:\r\n                  break;\r\n              }\r\n            } else if (e.target.id == 'left-arrow') {\r\n              switch (period) {\r\n                case 'daily':\r\n                  let dayUpdated = myDate.updateDate(new Date(date), -1)\r\n                  date = dayUpdated.toDateString()\r\n                  break;\r\n                case 'weekly':\r\n                  date = parseInt(date) - 1\r\n                  break;\r\n                case 'monthly':\r\n                  date = parseInt(date) - 1\r\n                  dateInMonth.setMonth(dateInMonth.getMonth() - 1)\r\n                  break;\r\n                default:\r\n                  break;\r\n              }\r\n            }\r\n            navigate(`/${period}/${type}/${specific}/${date}`)\r\n        } else {\r\n            switch (period) {\r\n              case 'daily':\r\n                date =  new Date(`${e.year}, ${e.month}, ${e.day}`)\r\n                navigate(`/${period}/${type}/${specific}/${date.toDateString()}`)\r\n                break;\r\n              case 'weekly':\r\n                date = new Date(`${e.from.year}, ${e.from.month}, ${e.from.day}`)\r\n                let weekNum = myDate.weekNumber(date)\r\n                navigate(`/${period}/${type}/${specific}/${weekNum}`)\r\n                break;\r\n              case 'monthly':\r\n                dateInMonth = new Date(`${e.from.year}, ${e.from.month}, ${e.from.day}`)\r\n                let monthNum = dateInMonth.getMonth()\r\n                navigate(`/${period}/${type}/${specific}/${monthNum}`)\r\n                break;\r\n              default:\r\n                break;\r\n        }\r\n        \r\n        }\r\n      }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          <div class = 'columns' style={{'margin-top': 'auto', 'border-top': '1px solid gray'}}> \r\n            \r\n            {period == 'daily' && <DailyCalendarView onClick = {e => adjustPeriod(e)} dateRange = {new Date(date)}  /> }\r\n            {period == 'weekly' && <WeeklyCalendarView onClick = {e => adjustPeriod(e)} dateRange = {weekRange} />}\r\n            {period == 'monthly' && <MonthlyCalendarView onClick = {e => adjustPeriod(e)} dateRange = {dateInMonth} />}\r\n            {dataLinkAdded && <TableView dataC={dataLinkAdded} type={type} onClick = {e => adjustPeriod(e)} dateRange = {new Date(date)}/>}\r\n              <Outlet />\r\n            <Productivity data = {data} show={detail ? 'text': 'table' } />\r\n          </div> \r\n\r\n          {period == 'weekly' && <WeekDaysView dateRange = {weekRange} />}\r\n\r\n        </>\r\n        )\r\n}\r\n\r\nfunction addLink (calData) {\r\n    let calLinked = \r\n        <NavLink \r\n          style={({isActive})=>{\r\n            return {\r\n              color: isActive ? \"red\" : \"\"\r\n            };\r\n          }}\r\n          to = {`./${calData.calName}`}\r\n          key={calData.calName}\r\n        >\r\n          {calData.calName}\r\n        </NavLink>\r\n    return {\r\n      calName: calLinked,\r\n      totalHours: calData.totalHours\r\n    }\r\n  }\r\n\r\n \r\n","import {useParams} from 'react-router-dom';\r\nimport useFetch from '../../useFetch.js'\r\nimport {TableView} from './TypeView.js';\r\nexport default  function CalName(props) {\r\n    let params = useParams();\r\n    let url = `/api`\r\n    let {period, type, specific, date, detail} = params\r\n    if (type == 'calName') {\r\n        url=`/api/${period}/eventName/${specific}/${date}/${detail}`\r\n    } else if (type == 'eventName') {\r\n        alert(\"coming soon\")\r\n    }\r\n    let data = useFetch(url)\r\n    if(data) {\r\n        data = data.records\r\n        // alert(url + ' and '  + JSON.stringify(data))\r\n        return (\r\n        <TableView dataC={data} type=\"eventName\"/>            \r\n        )\r\n    } else {\r\n        return <h1> Loading...</h1>\r\n    }\r\n    \r\n    \r\n}\r\n\r\n/*\r\nIF period has calNames THEN\r\n\tIF params has daily THEN\r\n\t\trequest daily-get with id=date and calName=detail grouped by eventName\r\n\tELSE IF params has weekly THEN\r\n\t\trequest weekly-get with weekNum=date and calName=detail grouped by eventName\r\n\tELSE IF params has monthly THEN\r\n\t\trequest monthly-get with monthNum=date and calName=detail grouped by eventName\r\n\tEND IF\r\nELSE IF params has eventName THEN\r\n\tIF params has daily THEN\r\n\t\trequest daily-get with id=date and eventName=detail grouped by description\r\n\tELSE IF params has weekly THEN\r\n\t\trequest weekly-get with weekNum=date and eventName=detail grouped by description\r\n\tELSE IF params has monthly THEN\r\n\t\trequest monthly-get with weekNum=date and eventName=detail grouped by description\r\n\tEND IF\r\n*/","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter , Routes, Route} from \"react-router-dom\";\r\nimport Home from \"./pages/toDo/Home.js\";\r\nimport Contact from \"./pages/toDo/Contact\";\r\nimport Nav from \"./pages/Nav\";\r\nimport Custom from \"./pages/toDo/Custom.js\"\r\nimport Router from \"./pages/Router.js\"\r\nimport CalName from \"./pages/views/DetailView.js\"\r\nimport 'bulma/css/bulma.min.css';\r\nimport * as myApp from './App.js';\r\n\r\nfunction Index () {\r\n  //don't forget App\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<App/>} />\r\n        <Route path=\"/\" element={<Nav onSignout = {myApp.handleSignoutClick}/>} >\r\n          <Route path=\"/home\" element={<Home />} />\r\n          <Route path=\"/contact\" element={<Contact/>} />\r\n          <Route path=\"/:period/:type/:specific/:date\" element={<Router/>} >    {/*{<Daily day={new Date()} */}\r\n            <Route path=\"/:period/:type/:specific/:date/:detail\" element={<CalName/>} />\r\n          </Route>\r\n          <Route path=\"/custom\" element={<Custom/>} />\r\n        </Route>\r\n      </Routes>\r\n    </BrowserRouter>\r\n  \r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Index />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}