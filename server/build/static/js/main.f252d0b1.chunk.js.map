{"version":3,"sources":["logo.svg","date.js","requestAndStore.js","requestMyServer.js","App.js","reportWebVitals.js","pages/Contact.js","pages/Blogs.js","useFetch.js","pages/Daily.js","pages/Weekly.js","pages/Nav.js","index.js"],"names":["updateDate","currentDate","shift","Math","abs","getDate","setMonth","getMonth","setDate","daysInAMonth","month","includes","toString","timeZone","string","timeBetween","date1","date2","ms","getTime","minutes","hours","days","weeks","floor","years","weekNumber","date","yearStarts","Date","getFullYear","secondWeekStartsOn","getDay","secondWeekStarts","oneWeek","shifts","day","shiftLeft","shiftRight","alert","adjustDate","console","log","weekStartsOn","weekEndsOn","givenWeek","toDateString","starterURL","calendarList","eventList","gapi","window","numberOfEvents","a","client","calendar","list","response","calendars","result","items","i","length","push","summary","dayAhead","myDate","dayBehind","events","id","toISOString","message","timeId","calName","calId","minDate","maxDate","forEach","event","undefined","start","eventStartsAt","dateTime","eventEndsAt","end","eventDuration","roundTo2Decimals","dayEndsAt","setHours","nextDayStartsAt","weekNum1","weekNum2","monthNum1","monthNum2","eventDuration1","eventDuration2","sendPost","description","weekNum","monthNum","eventName","startTime","endTime","duration","axios","method","url","data","number","round","RequestMyServer","React","useState","setData","useEffect","fetch","then","res","json","src","logo","className","alt","App","API_KEY","CLIENT_ID","DISCOVERY_DOCS","SCOPES","authorizeButton","document","getElementById","signoutButton","handleClick","load","init","apiKey","clientId","discoveryDocs","scope","auth2","getAuthInstance","signIn","updateSignInStatus","catch","err","signedIn","myRequestAndStore","onClick","this","style","display","href","target","rel","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Contact","Blogs","useFetch","Day","requested","calNames","editedData","records","map","record","TotalHours","class","slice","Daily","tomorrow","today","today_1","today_2","today_3","today_4","today_5","today_6","productivity","counter","productive","neutral","destructive","others","productivityList","neturalList","destructiveList","measureProductivity","toLowerCase","totalHours","ViewButtons","props","value","handleViewButton","type","selected","CalendarView","dataC","TableData","columnsT","Header","accessor","dataT","columns","useMemo","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","border","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","borderBottom","background","color","fontWeight","render","row","getRowProps","cells","cell","getCellProps","padding","Summaries","dateRange","currentWeek","height","toLocaleDateString","weekday","year","DateRangeView","options","ShowCalendar","defaultValue","from","to","onChange","colorPrimary","colorPrimaryLight","shouldHighlightWeekends","Productivity","totalRecorded","Weekly","setWeekNum","requestData","e","adjustWeek","addEventListener","$navbarBurgers","Array","prototype","call","querySelectorAll","el","dataset","$target","classList","toggle","Nav","role","Index","exact","path","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.f252d0b1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/**\r\n * @param {date, number}\r\n * @return {date} the new date shifted by the number \r\n * example: updateDate(today, 1) gives you the next day\r\n */\r\n  function updateDate(currentDate, shift) {\r\n    if(shift < 0 && Math.abs(shift) > currentDate.getDate()) {\r\n        currentDate.setMonth(currentDate.getMonth() - 1) \r\n        currentDate.setDate(currentDate.getDate() +  shift + daysInAMonth(currentDate.getMonth()));\r\n        return currentDate;\r\n    }\r\n    currentDate.setDate(currentDate.getDate() +  shift);\r\n    return currentDate; //updated date\r\n  }\r\n  \r\n  \r\n  /**\r\n   * number days in a month\r\n   * @param {number} month \r\n   * @returns {number} days in a month\r\n   */\r\n   function daysInAMonth (month) {\r\n    let longMonths = ('0, 2, 4, 6, 7, 9, 11')\r\n    if(longMonths.includes(month.toString())) {\r\n        return 31;\r\n    } else if(month === 2) {\r\n        return 28;\r\n    } else {\r\n        return 30;\r\n    }\r\n  }\r\n  \r\n   function timeZone(string) {\r\n    if(string.includes('Pacific')) {\r\n        return 'America/Los_Angeles'\r\n    } else if (string.includes('Eastern')) {\r\n        return 'America/New_York'\r\n    } else if (string.includes('Central')) {\r\n        return 'America/Chicago'\r\n    } else if (string.includes('Mountain')) {\r\n        return 'America/Denver'\r\n    } else if (string.includes('Alaska')) {\r\n        return ('America/Anchorage')\r\n    } else if (string.includes('Hawaii')) {\r\n        return ('Pacific/Honolulu');\r\n    } else {\r\n        return ('Etc/GMT')\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * givent two dates, it gives the difference in ms, minutes, hours, days, and years.\r\n   * \r\n   * @param date1 first day\r\n   * @param date2  second day\r\n   * \r\n   * @return Object date2 -date1 in {ms: ms, minutes: minutes, hours: hours, days: days, years: years}\r\n   */\r\n  function timeBetween (date1, date2) {\r\n    let ms = date2.getTime() - date1.getTime();\r\n    let minutes = ms/(1000*60);\r\n    let hours = minutes/60;\r\n    let days = hours/24;\r\n    let weeks = Math.floor(days/7);\r\n    let years = days/365;\r\n    return {ms: ms, minutes: minutes, hours: hours, days: days, weeks:weeks, years: years};\r\n  }\r\n  \r\n  /**\r\n   * given a date retunrs the week number starting from 0\r\n   * @param {Date Object} date \r\n   * @returns {integer} week number\r\n   */\r\n   function weekNumber (date) {\r\n    let yearStarts = new Date(date.getFullYear(), 0, 1, 0, 0)\r\n    let secondWeekStartsOn = secondWeekStarts(yearStarts)\r\n    yearStarts.setDate(secondWeekStartsOn)\r\n    let weekNum = timeBetween(yearStarts, date).weeks\r\n    return weekNum + 1 //week starts from 0, 1, 2...\r\n  }\r\n  \r\n  function secondWeekStarts(date) {\r\n    return 8 - date.getDay()\r\n  }\r\n\r\n  /**\r\n * @param {Date} date\r\n * @param {number} days\r\n * @return {number} day updated incase it's below 0 or above number of dates in that month\r\n */\r\nfunction validityCheck (date, day) {\r\n    // console.log('in validity check day is: ' + day)\r\n    // console.log('date is: ' + date.toDateString())\r\n    if(day < 0) {\r\n        // console.log(daysInAMonth(date.getMonth() - 1))\r\n        return day + daysInAMonth(date.getMonth() - 1)\r\n\r\n    } else if (day > 23) {\r\n        if(day > daysInAMonth(date.getMonth())) {\r\n            return day - daysInAMonth(date.getMonth());\r\n        } else {\r\n            return day;\r\n        }\r\n    } else {\r\n        return day;\r\n        \r\n    }\r\n}\r\n\r\n/** after this is getting weekly range */\r\nfunction adjustDate(date) {\r\n    let day = new Date(date).getDay();\r\n    let shiftLeft = 0\r\n    let shiftRight = 0\r\n    if (day == 0){\r\n        shiftRight = 6\r\n    } else if (day == 1) {\r\n        shiftLeft = -1\r\n        shiftRight = 5\r\n    } else if (day == 2) {\r\n        shiftLeft = -2\r\n        shiftRight = 4\r\n    } else if (day == 3) {\r\n        shiftLeft = -3\r\n        shiftRight = 3\r\n    } else if (day == 4) {\r\n        shiftLeft = -4\r\n        shiftRight = 2\r\n    } else if (day == 5) {\r\n        shiftLeft = -5\r\n        shiftRight = 1\r\n    } else if (day == 6) {\r\n        shiftLeft = -6\r\n    } else {\r\n        alert('no shift made')\r\n    }\r\n\r\n    return{shiftLeft: shiftLeft, shiftRight: shiftRight}\r\n}\r\n\r\n function oneWeek(date) {\r\n    let shifts = adjustDate(date)\r\n    console.log(shifts.shiftLeft + ' ' + shifts.shiftRight)\r\n    let weekStartsOn = new Date(date)\r\n    let weekEndsOn = new Date(date)\r\n    weekStartsOn = updateDate(weekStartsOn, shifts.shiftLeft)\r\n    weekEndsOn = updateDate(weekEndsOn, shifts.shiftRight)\r\n    return {weekStartsOn: weekStartsOn, weekEndsOn: weekEndsOn}\r\n}\r\n\r\nlet input = 'Mon Nov 29 2021'\r\nlet date = new Date(input)\r\nlet givenWeek = oneWeek(date)\r\nconsole.log(givenWeek.weekStartsOn.toDateString() + ' ' + givenWeek.weekEndsOn.toDateString())\r\n\r\nexport {updateDate, timeZone, timeBetween, weekNumber, oneWeek}","import axios from 'axios';\r\nimport * as myDate from './date.js';\r\n\r\nlet starterURL = 'https://react-g-calendar-analyzer.herokuapp.com/' \r\nlet calendarList = [];\r\nlet eventList = [];\r\nlet gapi = window.gapi; \r\nlet numberOfEvents = 0\r\n\r\n   export async function listOfCalendars() {\r\n    try {\r\n      let response = await gapi.client.calendar.calendarList.list({});\r\n      let calendars = response.result.items;\r\n      for(let i = 0; i< calendars.length; i++) {\r\n          let calendar = calendars[i];\r\n          calendarList.push(calendar.summary)\r\n          let dayAhead = myDate.updateDate(new Date(), 7);\r\n          let dayBehind = myDate.updateDate(new Date(), -80);\r\n          events('day', calendar.summary, calendar.id, dayBehind.toISOString(), dayAhead.toISOString());\r\n        }\r\n    } catch (error) {\r\n      alert('error in requestAndStore-> listOfCalendars ' + error.message);\r\n    }\r\n  }\r\n\r\n  /**\r\n * for a given week, it adds up the hours for each calendar \r\n * by making sure events that start the previos week or spans to the next week \r\n * are correctly updated \r\n * \r\n * @param {string} timeId \r\n * @param {string} calName \r\n * @param {*} calId \r\n * @param {dateISOString} minDate \r\n * @param {dateISOString} maxDate \r\n * \r\n * Eventually, it will populate @object weeklyData and call @function sendToServer() \r\n */\r\n async function events(timeId, calName, calId, minDate, maxDate) {\r\n\r\n  //  console.log(`called with ${timeId}, ${calName}, ${new Date(minDate).toLocaleString()}, ${new Date(maxDate).toLocaleString()}`)\r\n  try {\r\n    let response = await gapi.client.calendar.events.list({\r\n      'calendarId': calId,\r\n      'singleEvents': true,\r\n      'orderBy': 'startTime',\r\n      'timeZone': myDate.timeZone(new Date().toString()),\r\n      'timeMin': minDate,\r\n      'timeMax': maxDate,\r\n      'maxResults': 2500,\r\n      \r\n  });\r\n\r\n  const events = response.result.items;\r\n  let requestFrom = new Date(minDate);\r\n  let requestUpTo = new Date(maxDate);\r\n  // console.log('sleep requesting from: ' + requestFrom + ' upto ' + requestUpTo);\r\n  events.forEach((event) => {\r\n      numberOfEvents++;\r\n      console.log('num of events is: '+ numberOfEvents)\r\n    //  console.log(event.summary + ':' + new Date(event.start.dateTime).toLocaleString() + ':' + new Date(event.end.dateTime).toLocaleString() + ':' + calName + ':' + 3 + ':' + 3)\r\n     if (event.summary !== undefined && !event.start.date) { // ignores undefined and all day events\r\n      if (!(eventList.includes(event.summary))) {\r\n        eventList.push(event.summary)\r\n      }\r\n      let eventStartsAt = new Date(event.start.dateTime);\r\n      let eventEndsAt = new Date(event.end.dateTime);\r\n      let eventDuration =  roundTo2Decimals(myDate.timeBetween(eventStartsAt, eventEndsAt).hours)\r\n      \r\n      \r\n      //if event goes to the next day break it into to events upto 11:59:59 and 12 after that\r\n      if (eventStartsAt.getDate() !== eventEndsAt.getDate()) {\r\n        let dayEndsAt = (new Date(eventStartsAt))\r\n        dayEndsAt.setHours(23, 59, 59)\r\n        let nextDayStartsAt = (new Date(eventEndsAt));\r\n        nextDayStartsAt.setHours(0,0,0)\r\n        // alert('event start and end dates respectively: ' + eventStartsAt.getDate() + ' and ' + eventEndsAt.getDate())\r\n        // alert(\"eventStartsAt: \" + eventStartsAt.toLocaleString() + \" AND \" + 'eventEndsAt: ' + eventEndsAt.toLocaleString())\r\n        // alert('dayEndsAt: ' + dayEndsAt.toLocaleString())\r\n        // alert('nextdayStartsAt: ' + nextDayStartsAt.toLocaleString())\r\n        //seperate into two events \r\n        // console.log(event.summary + ':' + eventStartsAt.toLocaleString() + ':' + dayEndsAt.toLocaleString() + ':' + calName + ':' + 3 + ':' + 3)\r\n        // console.log(event.summary + ':' + dayStartsAt.toLocaleString() + ':' + eventEndsAt.toLocaleString() + ':' + calName + ':' + 3 + ':' + 3)\r\n        let weekNum1 = myDate.weekNumber(eventStartsAt)\r\n        let weekNum2 = myDate.weekNumber(eventEndsAt)\r\n        let monthNum1 = eventStartsAt.getMonth()\r\n        let monthNum2 = eventEndsAt.getMonth()\r\n        let eventDuration1 = roundTo2Decimals(myDate.timeBetween(eventStartsAt, dayEndsAt).hours)\r\n        let eventDuration2 = roundTo2Decimals(myDate.timeBetween(nextDayStartsAt, eventEndsAt).hours)\r\n        sendPost(eventStartsAt.toDateString(), event.summary, eventStartsAt, dayEndsAt, calName, event.description, eventDuration1, weekNum1, monthNum1)\r\n        sendPost(eventEndsAt.toDateString(), event.summary, nextDayStartsAt, eventEndsAt, calName, event.description, eventDuration2, weekNum2, monthNum2)\r\n        // console.log(eventStartsAt.toDateString(), event.summary, eventStartsAt.toDateString(), dayEndsAt.toDateString(), calName, event.description, eventDuration1, weekNum1, monthNum1)\r\n        // console.log('second Shift')\r\n        // console.log(eventEndsAt.toDateString(), event.summary, nextDayStartsAt.toDateString(), eventEndsAt.toDateString(), calName, event.description, eventDuration2, weekNum2, monthNum2)\r\n\r\n      } else {\r\n        let weekNum = myDate.weekNumber(eventStartsAt)\r\n        let monthNum = eventStartsAt.getMonth()\r\n        // console.log(event.summary + ':' + eventStartsAt.toLocaleString() + ':' + eventEndsAt.toLocaleString() + ':' + calName + ':' + 3 + ':' + 3)\r\n        sendPost(eventStartsAt.toDateString(), event.summary, eventStartsAt, eventEndsAt, calName, event.description, eventDuration, weekNum, monthNum)\r\n\r\n      }\r\n      \r\n     }\r\n  })\r\n  \r\n  } catch (error) {\r\n    console.log(error)\r\n    alert('error in requestAndStore-> events: ' + error.message)\r\n  }\r\n }\r\n\r\n async function sendPost(id, eventName, startTime, endTime, calName, description, duration, weekNum, monthNum ){\r\n  try {\r\n   let result = await axios ({\r\n     method: 'post',\r\n     url: `${starterURL}api/daily/`,\r\n     data: {\r\n        \"id\": id,\r\n        \"eventName\": eventName,\r\n        \"startTime\": startTime,\r\n        \"endTime\": endTime,\r\n        \"calName\": calName,\r\n        \"description\": description,\r\n        \"duration\": duration,\r\n        \"weekNum\": weekNum,\r\n        \"monthNum\": monthNum\r\n     }\r\n })\r\n//  alert(JSON.stringify(result))\r\n  } catch (error) {\r\n    alert('error in requestAndStore-> sendPost: ' + error.message)\r\n  }\r\n }\r\n\r\n function roundTo2Decimals(number) {\r\n   return Math.round(number*100)/100\r\n }\r\n","// client/src/App.js\r\n\r\nimport React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\n\r\nfunction RequestMyServer() {\r\n  const [data, setData] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"/api\")\r\n      .then((res) => res.json())\r\n      .then((data) => setData(data.message));\r\n  }, []);\r\n  \r\n  return (\r\n    <div >\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      <p>{!data ? \"Loading...\" : data}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RequestMyServer;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport * as myRequestAndStore from './requestAndStore.js'\r\nimport axios from 'axios';\r\nimport RequestMyServer from './requestMyServer.js';\r\n\r\nclass App extends React.Component {\r\n  gapi = window.gapi;  \r\n  // Client ID and API key from the Developer Console\r\n  API_KEY = 'AIzaSyBYxwNwT53EbvQNvhVCDD3FZW3KvTQWRBs';\r\n  CLIENT_ID = '958765352456-n0b4hg33876562lgerugi6qfei2jjaja.apps.googleusercontent.com';\r\n  // Array of API discovery doc URLs for APIs used by the quickstart\r\n  DISCOVERY_DOCS = ['https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest'];\r\n  // Authorization scopes required by the API; multiple scopes can be\r\n  // included, separated by spaces.\r\n  SCOPES = 'https://www.googleapis.com/auth/calendar.readonly';\r\n\r\n  authorizeButton = document.getElementById('authorize_button');\r\n  signoutButton = document.getElementById('signout_button');\r\n\r\n\r\n  handleClick = () => {\r\n    this.gapi.load('client:auth2', () => {\r\n      console.log('loaded client')\r\n\r\n      this.gapi.client.init({\r\n        apiKey: this.API_KEY,\r\n        clientId: this.CLIENT_ID,\r\n        discoveryDocs: this.DISCOVERY_DOCS,\r\n        scope: this.SCOPES,\r\n      })\r\n\r\n      this.gapi.client.load('calendar', 'v3', () => console.log('bam!'))\r\n\r\n      this.gapi.auth2.getAuthInstance().signIn()\r\n      .then(() => { \r\n        this.updateSignInStatus(true)\r\n      })\r\n      .catch(err => alert('trying to sign in but: ' + err.message))\r\n    })\r\n  }\r\n\r\n  updateSignInStatus(signedIn) {\r\n    if (signedIn) {\r\n      // alert('signIn Confirmed')\r\n      myRequestAndStore.listOfCalendars()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // let msg \r\n\r\n    // axios.get(\"/api\")\r\n    // .then(res => {\r\n    //   alert('axios')\r\n    //   msg = res.data.message\r\n    //   alert('msg is ' + msg)\r\n      \r\n    // })\r\n    \r\n    // fetch(\"/api\")\r\n    //   .then((res) => res.json())\r\n    //   .then((data) => {alert(data.message); msg = data.message});\r\n \r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n        < RequestMyServer />\r\n          <p> Edit <code>src/App.js</code> and save to reload. </p>\r\n          <p>\r\n            <button onClick={this.handleClick}> List Events  </button>\r\n             {/* <!--Add buttons to initiate auth sequence and sign out--> */}\r\n            <button id=\"authorize_button\" style={{display: \"none\"}}>Authorize</button>\r\n            <button id=\"signout_button\" style={{display: \"none\"}}>Sign Out</button>\r\n  \r\n          </p>\r\n  \r\n          <pre id=\"content\" style={{\"whiteSpace\": \"pre-wrap\"}}></pre>\r\n  \r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://reactjs.org\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Learn React\r\n          </a>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const Contact = () => {\r\n    return <h1>Contact Me</h1>;\r\n  };\r\n  \r\n  export default Contact;","const Blogs = () => {\r\n    return <h1>Blog Articles</h1>;\r\n  };\r\n  \r\n  export default Blogs;","import {useState, useEffect} from \"react\";\r\n\r\nfunction useFetch (url) {\r\n    let [data, setData] = useState(null, url);\r\n    useEffect(() => {\r\n        fetch(url)\r\n            .then((res) => res.json())\r\n            .then((data) => setData(data))\r\n    }, [url])\r\n    return data;\r\n}\r\n\r\nexport default useFetch;","import useFetch from \"../useFetch\";\r\nimport '../App.css'\r\nimport * as myDate from '../date.js';\r\n\r\n\r\n\r\n  const Daily = (requested) => {\r\n    let tomorrow = (myDate.updateDate((new Date()), 1)).toDateString()\r\n    let today = (new Date()).toDateString()\r\n    let today_1 = (myDate.updateDate((new Date()), -1)).toDateString()\r\n    let today_2 = (myDate.updateDate((new Date()), -2)).toDateString()\r\n    let today_3 = (myDate.updateDate((new Date()), -3)).toDateString()\r\n    let today_4 = (myDate.updateDate((new Date()), -4)).toDateString()\r\n    let today_5 = (myDate.updateDate((new Date()), -5)).toDateString()\r\n    let today_6 = (myDate.updateDate((new Date()), -6)).toDateString()\r\n     {/* <Day date={`/api/daily/${today_6}`}/>\r\n            <Day date={`/api/daily/${today_5}`}/> \r\n            <Day date={`/api/daily/${today_4}`}/>\r\n            <Day date={`/api/daily/${today_3}`}/>\r\n            <Day date={`/api/daily/${today_2}`}/>\r\n            <Day date={`/api/daily/${today_1}`}/>\r\n            <Day date={`/api/daily/${today}`}/>\r\n            <Day date={`/api/daily/${tomorrow}`}/> */}\r\n    return(\r\n          <table class=\"table is-bordered is-striped is-narrow\"> \r\n            <tr class='tc'> <Day date={`/api/daily/${today_6}`}/> </tr>\r\n            <tr class='tc'> <Day date={`/api/daily/${today_5}`}/> </tr>\r\n            <tr class='tc'> <Day date={`/api/daily/${today_4}`}/> </tr>\r\n            <tr class='tc'> <Day date={`/api/daily/${today_3}`}/> </tr>\r\n            <tr class='tc'> <Day date={`/api/daily/${today_2}`}/> </tr>\r\n            <tr class='tc'> <Day date={`/api/daily/${today_1}`}/> </tr>\r\n            <tr class='tc'> <Day date={`/api/daily/${today}`}/> </tr>\r\n            <tr class='tc'> <Day date={`/api/daily/${tomorrow}`}/> </tr>\r\n           \r\n\r\n \r\n               \r\n          </table>\r\n    )\r\n  }\r\n// {/* <h2 >{requested.date.slice(11)}</h2> */}\r\n\r\n  const Day =  (requested) => {\r\n    // alert(requested.date)\r\n    let data =  useFetch(requested.date)\r\n    let calNames = ['Education', 'Entertainment', 'Life', 'MED', 'Work']\r\n    let editedData = {records: []}\r\n    // alert('data is '+ JSON.stringify(data))\r\n    // data = {\"records\":[{\"calName\":\"Education\",\"TotalHours\":1.25},{\"calName\":\"Entertainment\",\"TotalHours\":1},{\"calName\":\"Life\",\"TotalHours\":20.99972222222222}]}\r\n    if(data) {\r\n      let calendars = []\r\n      data.records.map(record => {\r\n        calendars.push( record.calName)\r\n      })\r\n      // alert(JSON.stringify( 'calendars are ' + calendars))\r\n      // alert(calendars.includes(\"Education\"))\r\n      for(let i = 0; i < calNames.length; i++) {\r\n      \r\n        if(calendars.includes(calNames[i])) {\r\n          data.records.forEach(record => {\r\n            if (record.calName == calNames[i]) {\r\n              editedData.records[i] = record\r\n            }\r\n          })\r\n          \r\n        } else {\r\n          editedData.records[i] = {calName: calNames[i], TotalHours: 0}\r\n        }\r\n      }\r\n\r\n      // alert('edited data is ' + JSON.stringify(editedData))\r\n      return (\r\n        <>\r\n          <th class='tc' >{requested.date.slice(11)}</th>\r\n          {editedData.records.map(\r\n            (record) =>  <td  class='tc'> {record.calName} : {Math.round(record.TotalHours * 100)/100} </td>\r\n          )}\r\n        </>\r\n      )\r\n    } else {\r\n      return 'Loading'\r\n    }\r\n    };\r\n    \r\n    let handleCalNames = (record, keys) => {\r\n  \r\n      return <td  class='tc'> {record.calName} : {Math.round(record.TotalHours * 100)/100} </td>\r\n      }\r\n        \r\n\r\n\r\n    let handleEventNames = () => {\r\n      alert('there')\r\n    }\r\n  \r\n  export default Daily;","import useFetch from \"../useFetch\";\r\nimport '../App.css'\r\nimport React, {useState} from \"react\"\r\nimport * as myDate from '../date.js';\r\nimport { useTable } from 'react-table'\r\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\r\nimport DatePicker from \"react-modern-calendar-datepicker\";\r\nimport { Calendar } from \"react-modern-calendar-datepicker\";\r\n\r\n  let productivity = {counter: {productive: 0, neutral: 0, destructive: 0, others:0}, list:{productivityList: [\"education\", \"med\", \"work\", \"tasks\"], neturalList:[\"life\"], destructiveList:['entertainment']}}\r\n  \r\n  let Weekly = (props) => {\r\n      let [weekNum, setWeekNum] = useState(props.weekNum)\r\n      let requestData =  useFetch(`/api/weekly/${weekNum}`)\r\n      let data= null\r\n      let totalRecorded = 0\r\n      let dateRange =  {weekStartsOn: new Date('Sun Oct 31 2021'), weekEndsOn: new Date('Sat Nov 5 2021')}\r\n      if(requestData) {\r\n        data = requestData.records\r\n        measureProductivity(data)\r\n        dateRange = myDate.oneWeek(data[0].id)\r\n        totalRecorded = productivity.counter.productive + productivity.counter.neutral + productivity.counter.destructive + productivity.counter.others\r\n      }\r\n\r\n      let adjustWeek = (e) => {\r\n        if(e.target && e.target.id) {\r\n          if (e.target.id == 'right-arrow') {\r\n            setWeekNum(weekNum + 1)\r\n          } else if (e.target.id == 'left-arrow') {\r\n            setWeekNum(weekNum - 1)\r\n         }\r\n        } else {\r\n          //make date\r\n          let date =  new Date(`${e.from.year}, ${e.from.month}, ${e.from.day}`)\r\n          // find it's week num\r\n          let weekNum = myDate.weekNumber(date)\r\n          // update weekNum\r\n          setWeekNum(weekNum)\r\n          // alert('pressed is: ' + (JSON.stringify(e)))\r\n          // alert(date.toLocaleDateString())\r\n        }\r\n      }\r\n\r\n      return(\r\n        <div class = 'columns'>\r\n          <CalendarView dataC={data}/>\r\n          <Summaries onClick = {e => adjustWeek(e)} dateRange = {dateRange} />\r\n          <Productivity totalRecorded = {totalRecorded}/>\r\n        </div>\r\n      )\r\n  }\r\n// {/* <h2 >{requested.date.slice(11)}</h2> */}\r\n\r\nlet measureProductivity = (records) => {\r\n  productivity.counter ={productive: 0, neutral: 0, destructive: 0, others:0}\r\n  records.forEach((record) => {\r\n    if (productivity.list.productivityList.includes(record.calName.toLowerCase())) {\r\n      productivity.counter.productive += record.totalHours\r\n    } else if (productivity.list.neturalList.includes(record.calName.toLowerCase())) {\r\n      productivity.counter.neutral += record.totalHours\r\n    } else if (productivity.list.destructiveList.includes(record.calName.toLowerCase())) {\r\n      productivity.counter.destructive += record.totalHours\r\n    } else {\r\n      productivity.counter.others += record.totalHours\r\n    }\r\n  })\r\n  \r\n}\r\n\r\n  const Week =  (requested) => {\r\n\r\n    // alert(requested.date)\r\n    let data =  useFetch(requested.date)\r\n    productivity = {counter: [{productive: 0}, {neutral: 0}, {destructive: 0}], list:{productivityList: [\"education\", \"med\", \"work\", \"tasks\"], neturalList:[\"life\"], destructiveList:['entertainment']}}\r\n    let calNames = ['Education', 'Entertainment', 'Life', 'MED', 'Work']\r\n    let editedData = {records: []}\r\n    // alert('data is '+ JSON.stringify(data))\r\n    // data = {\"records\":[{\"calName\":\"Education\",\"totalHours\":1.25},{\"calName\":\"Entertainment\",\"totalHours\":1},{\"calName\":\"Life\",\"totalHours\":20.99972222222222}]}\r\n    if(data) {\r\n      let calendars = []\r\n\r\n      data.records.map(record => {\r\n        calendars.push( record.calName)\r\n      })\r\n      // alert(JSON.stringify( 'calendars are ' + calendars))\r\n      // alert(calendars.includes(\"Education\"))\r\n      for(let i = 0; i < calNames.length; i++) {\r\n      \r\n        if(calendars.includes(calNames[i])) {\r\n          data.records.forEach(record => {\r\n            if (record.calName == calNames[i]) {\r\n              editedData.records[i] = record\r\n              measureProductivity(record.calName, record.totalHours)\r\n            }\r\n          })\r\n          \r\n        } else {\r\n          editedData.records[i] = {calName: calNames[i], totalHours: 0, id: 0}\r\n        }\r\n      }\r\n\r\n      // alert('edited data is ' + JSON.stringify(editedData))\r\n      let str = \"\"\r\n      str+= editedData.records[0].id\r\n    //   \r\n      return (\r\n        <>\r\n          <th class='tc' >{requested.date.slice(12)} ({str.slice(0,-5)})</th>\r\n          {editedData.records.map(\r\n            (record) =>  <td  class='tc'> {record.calName} : {Math.round(record.totalHours * 100)/100} </td>\r\n          )}\r\n        </>\r\n      )\r\n    } else {\r\n      return 'Loading'\r\n    }\r\n    };\r\n    \r\n    let handleCalNames = (record, keys) => {\r\n  \r\n      return <td  class='tc'> {record.calName} : {Math.round(record.totalHours * 100)/100} </td>\r\n      }\r\n        \r\n\r\n\r\n    let handleEventNames = () => {\r\n      alert('there')\r\n    }\r\n  \r\n  function  ViewButtons (props) {\r\n    return(\r\n          <div class='buttons has-addons '>\r\n            <button class = \"button\" > Graph </button>\r\n            <button  value = \"table\" class = 'button is-selected' onClick = {(event) => handleViewButton(props.type, event.target.value)}> Table</button>\r\n            <button class='button'> Text </button>\r\n          </div>\r\n    )\r\n  }\r\n\r\n  let handleViewButton = (type, selected) => {\r\n    if (type == \"calendar\") {\r\n      alert('in ' + type + ' view ' + selected  +  ' is selected.')\r\n    }\r\n  }\r\n\r\n  let CalendarView = (props) => {\r\n      let columnsData = [\r\n        {\r\n          Header: 'Calendar',\r\n          accessor: 'calName', // accessor is the \"key\" in the data\r\n        },\r\n        {\r\n          Header: 'Hours',\r\n          accessor: 'totalHours',\r\n        },\r\n      ]\r\n\r\n     \r\n      let data = [\r\n        {\r\n          \"calName\": 'Hello',\r\n          \"totalHours\": 100,\r\n          \"id\": 'World',\r\n          \r\n        },\r\n        {\r\n          \"calName\": 'Hello',\r\n          \"totalHours\": 100,\r\n          \"id\": 'World',\r\n        },\r\n        {\r\n          \"calName\": 'Hello',\r\n          \"totalHours\": 100,\r\n          \"id\": 'World',\r\n        },\r\n      ]\r\n    \r\n      if (props.dataC) {\r\n        data = props.dataC\r\n      }\r\n      \r\n\r\n      return(\r\n        <div class = 'column'>\r\n            <p class=\"is-centered\">Calendar</p>\r\n            <ViewButtons type='calendar'/>\r\n            <TableData columnsT={columnsData} dataT={data}/>\r\n\r\n        </div>\r\n       \r\n      )\r\n    \r\n  }\r\n  \r\n  \r\n \r\n \r\n  function TableData(props) {\r\n    \r\n    const columns = React.useMemo(\r\n      () => props.columnsT, []\r\n    )\r\n    let data = props.dataT\r\n  \r\n    const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n      headerGroups,\r\n      rows,\r\n      prepareRow,\r\n    } = useTable({ columns, data })\r\n  \r\n    return (\r\n      <table class='table' {...getTableProps()} style={{ border: 'solid 1px blue' }}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th\r\n                  {...column.getHeaderProps()}\r\n                  style={{\r\n                    border: 'solid 1px blue',\r\n                    borderBottom: 'solid 2px red',\r\n                    background: 'aliceblue',\r\n                    color: 'black',\r\n                    fontWeight: 'bold',\r\n                    \r\n                  }}\r\n                >\r\n                  {column.render('Header')}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map(row => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return (\r\n                    <td\r\n                      {...cell.getCellProps()}\r\n                      style={{\r\n                        padding: '10px',\r\n                        border: 'solid 1px gray',\r\n                        background: 'papayawhip',\r\n                      }}\r\n                    >\r\n                      {cell.render('Cell')}\r\n                    </td>\r\n                  )\r\n                })}\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    )\r\n  }\r\n  \r\n  let Summaries = (props) => {\r\n    let date = new Date(props.dateRange.weekEndsOn)\r\n    let weekNumber = myDate.weekNumber(date)\r\n    let currentWeek = myDate.weekNumber(new Date())\r\n  \r\n    if(weekNumber == (currentWeek - 1)) {\r\n      weekNumber = `${weekNumber} (previous week)`\r\n    } else if(weekNumber == currentWeek ){\r\n      weekNumber = `${weekNumber} (current week)`\r\n    } else if (weekNumber == (currentWeek + 1)) {\r\n      weekNumber = `${weekNumber} (next week)`\r\n    }\r\n    let options = {weekday: \"short\",  month: \"short\", day: \"numeric\", year: \"numeric\"}\r\n    return (\r\n      <div class = 'column is-centered'>\r\n        <h2>  Your week {weekNumber} summary </h2>\r\n        <DateRangeView \r\n          dateRange={props.dateRange} \r\n          onClick={props.onClick}\r\n          style={{height:10}}/>\r\n        \r\n        <ShowCalendar onClick={props.onClick} dateRange={props.dateRange} />\r\n        <p>Today's date is <strong>{new Date().toLocaleDateString(\"en-US\", options)} </strong> , week {myDate.weekNumber(new Date())}  </p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  let DateRangeView = (props) => {\r\n    \r\n    let weekStartsOn = props.dateRange.weekStartsOn\r\n    let weekEndsOn = props.dateRange.weekEndsOn\r\n    // year not necessary\r\n    // if same month don't repeat month on weekEndsOn\r\n\r\n    let options = {weekday: \"short\",  month: \"short\", day: \"numeric\"}\r\n    weekStartsOn = weekStartsOn.toLocaleDateString(\"en-US\", options)\r\n    \r\n    weekEndsOn = weekEndsOn.toLocaleDateString(\"en-US\", options)\r\n    return(\r\n      <div class=\"field has-addons is-centered\">\r\n          <p class=\"control\">\r\n          <button onClick={props.onClick} value= 'left' id=\"left-arrow\" class=\"button\"> \r\n            <span class=\"icon is-small\">\r\n              <i class=\"fas fa-arrow-circle-left\"></i>\r\n            </span>\r\n          </button>\r\n          </p>\r\n          <p class=\"control\">\r\n          <button class=\"button textInside\">\r\n            <span id=\"viewing\"> <strong>{weekStartsOn} </strong> to <strong> {weekEndsOn} </strong></span>\r\n          </button>\r\n          </p>\r\n          <p class=\"control\" >\r\n          <button onClick={props.onClick} value = 'right' id=\"right-arrow\" class=\"button\">\r\n            <span class=\"icon is-small\">\r\n              <i class=\"fas fa-arrow-alt-circle-right\"></i>\r\n          </span>\r\n          </button>\r\n          </p>\r\n        </div>\r\n    )\r\n  }\r\n  let ShowCalendar = (props) => {\r\n     // ✅ a change in default state: { from: ..., to: ... }\r\n     let weekStartsOn = props.dateRange.weekStartsOn\r\n     let weekEndsOn = props.dateRange.weekEndsOn\r\n    //  alert('show calendar: starts On: ' + weekStartsOn)\r\n    //  alert('show calendar: ends on: ' + weekEndsOn)\r\n     let defaultFrom = {\r\n      year: weekStartsOn.getFullYear(),\r\n      month: weekStartsOn.getMonth() + 1,\r\n      day: weekStartsOn.getDate(),\r\n    };\r\n    let defaultTo = {\r\n      year: weekEndsOn.getFullYear(),\r\n      month: weekEndsOn.getMonth() + 1,\r\n      day: weekEndsOn.getDate(),\r\n    };\r\n    // alert('show calendar: default From: ' + JSON.stringify(defaultFrom))\r\n    // alert('show calendar: default to: ' + JSON.stringify(defaultTo))\r\n    \r\n    let defaultValue = {\r\n      from: defaultFrom,\r\n      to: defaultTo,\r\n    };\r\n    let [selectedDayRange, setSelectedDayRange] = useState(\r\n      defaultValue\r\n    );\r\n \r\n    return (\r\n      <Calendar\r\n        value={defaultValue}\r\n        onChange={props.onClick}\r\n        colorPrimary=\"#0fbcf9\" // added this\r\n        colorPrimaryLight=\"rgba(75, 207, 250, 0.4)\" // and this\r\n        shouldHighlightWeekends\r\n      />\r\n    );\r\n    // const defaultFrom = {\r\n    //   year: 2021,\r\n    //   month: 10,\r\n    //   day: 31,\r\n    // };\r\n    // const defaultTo = {\r\n    //   year: 2021,\r\n    //   month: 11,\r\n    //   day: 5,\r\n    // };\r\n    // const defaultValue = {\r\n    //   from: defaultFrom,\r\n    //   to: defaultTo,\r\n    // };\r\n    // const [selectedDayRange, setSelectedDayRange] = useState(\r\n    //   defaultValue\r\n    // );\r\n  \r\n    // return (\r\n    //   <Calendar\r\n    //     value={selectedDayRange}\r\n    //     onChange={setSelectedDayRange}\r\n    //     colorPrimary=\"#0fbcf9\" // added this\r\n    //     colorPrimaryLight=\"rgba(75, 207, 250, 0.4)\" // and this\r\n    //     shouldHighlightWeekends\r\n    //   />\r\n    // );\r\n  }\r\n\r\n  let Productivity = (props) => {\r\n    let columnsData = [\r\n      {\r\n        Header: 'Productive',\r\n        accessor: 'productive', // accessor is the \"key\" in the data\r\n      },\r\n      {\r\n        Header: 'Neutral',\r\n        accessor: 'neutral',\r\n      },\r\n      {\r\n        Header: 'Destructive',\r\n        accessor: 'destructive',\r\n      },\r\n    ]\r\n\r\n    let data = [productivity.counter]\r\n    return (\r\n      <div class = 'column'> \r\n          <p> Productivity</p>\r\n          <ViewButtons type='productivity'/>\r\n          <TableData columnsT={columnsData} dataT={data}/>\r\n          <p> Total Hours: {props.totalRecorded}</p>\r\n\r\n      </div>\r\n      \r\n\r\n    )\r\n  }\r\n    export default Weekly;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport 'bulma/css/bulma.min.css';\r\n\r\n\r\nfunction Nav() {\r\n    return(\r\n        \r\n        <nav class=\"navbar is-light\" role=\"navigation\" aria-label=\"main navigation\">\r\n            <div class=\"navbar-brand\">\r\n                <Link to=\"/\" class=\"navbar-item\" > \r\n                {/* <img src=\"https://bulma.io/images/bulma-logo.png\" width=\"112\" height=\"28\"></img> */}\r\n                    \r\n                    <span class=\"icon-text\">\r\n                        <span class=\"icon\">\r\n                        <i class=\"fas fa-history\"></i>\r\n                        </span>\r\n                        <span class=\"m-0 p-0 has-text-link\" id = 'logo'>Lastweek</span>\r\n                    </span>\r\n                </Link>\r\n\r\n                <a role=\"button\" class=\"navbar-burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\r\n                <span aria-hidden=\"true\"></span>\r\n                <span aria-hidden=\"true\"></span>\r\n                <span aria-hidden=\"true\"></span>\r\n                </a>\r\n            </div>\r\n\r\n            <div id=\"navbarBasicExample\" class=\"navbar-menu\"> \r\n                <div class=\"navbar-start\">\r\n                    <Link to=\"/daily\" class=\"navbar-item\" > daily </Link>\r\n                    <Link to=\"/weekly\" class=\"navbar-item\"> weekly </Link>\r\n                    <Link to=\"/monthly\" class=\"navbar-item\"> Monthly </Link> \r\n\r\n                    \r\n                </div>\r\n\r\n                <div class=\"navbar-end\">\r\n                <div class=\"navbar-item has-dropdown is-hoverable\">\r\n                    <Link to=\"/more\" class=\"navbar-item\"> More </Link>\r\n                        <div class=\"navbar-dropdown\">\r\n                            <a class=\"navbar-item\">\r\n                                About\r\n                            </a>\r\n                            <Link to=\"/app\" class=\"navbar-item\"> App </Link> \r\n                            <Link to=\"/contact\" class=\"navbar-item\"> Contatct Me </Link>\r\n                            <hr class=\"navbar-divider\"/> \r\n                            <a class=\"navbar-item\">\r\n                                Report an issue\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"navbar-item\">\r\n                        <div class=\"buttons\">\r\n                            <a class=\"button is-primary\">\r\n                                <strong>Sign up</strong>\r\n                            </a>\r\n                            <a class=\"button is-light\">\r\n                                Log in\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>  \r\n        </nav>\r\n    )\r\n    \r\n}\r\n\r\n//navebar burger and navebar menu toggle is-active when pressed\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\r\n    // Get all \"navbar-burger\" elements\r\n    const $navbarBurgers = Array.prototype.slice.call(document.querySelectorAll('.navbar-burger'), 0);\r\n  \r\n    // Check if there are any navbar burgers\r\n    if ($navbarBurgers.length > 0) {\r\n  \r\n      // Add a click event on each of them\r\n      $navbarBurgers.forEach( el => {\r\n        el.addEventListener('click', () => {\r\n  \r\n          // Get the target from the \"data-target\" attribute\r\n          const target = el.dataset.target;\r\n          const $target = document.getElementById(target);\r\n  \r\n          // Toggle the \"is-active\" class on both the \"navbar-burger\" and the \"navbar-menu\"\r\n          el.classList.toggle('is-active');\r\n          $target.classList.toggle('is-active');\r\n  \r\n        });\r\n      });\r\n    }\r\n  \r\n  });\r\n\r\nexport default Nav;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\nimport Home from \"./pages/Contact\";\r\nimport Blogs from \"./pages/Blogs\";\r\nimport Daily from \"./pages/Daily\";\r\nimport Weekly from \"./pages/Weekly\";\r\nimport Contact from \"./pages/Contact\";\r\nimport Nav from \"./pages/Nav\";\r\nimport 'bulma/css/bulma.min.css';\r\n\r\n\r\nfunction Index () {\r\n  //don't forget App\r\n  return (\r\n    <Router>\r\n      <Nav/>      \r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/blogs\">\r\n          <Blogs/>\r\n        </Route>\r\n        <Route path=\"/contact\">\r\n          <Contact/>\r\n        </Route>\r\n        <Route path=\"/app\">\r\n          <App/>\r\n        </Route>\r\n        <Route path=\"/daily\">\r\n          <Daily/>\r\n        </Route>\r\n        <Route path=\"/weekly\">\r\n          <Weekly weekNum = {43}/>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n\r\n  \r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Index />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}